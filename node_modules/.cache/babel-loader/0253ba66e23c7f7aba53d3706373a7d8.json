{"ast":null,"code":"import _slicedToArray from\"/home/mistermboy/repositories/shex-author/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import{ShapesContext}from'../../../../App';import{getPrefix}from'../../../../utils/prefixUtils';function PrefixedComp(props){var context=useContext(ShapesContext);var shape=props.shape,triple=props.triple,type=props.type;var initialValue=shape.type.value;//We can't initializae initialPrefix \n//beacause if it is called by a triple \n//we don't know its shape's type\nvar initialPrefix;if(type=='shape'){initialPrefix=shape.type.prefix.prefixValue;}else if(type=='triple'){initialValue=triple.type.value;initialPrefix=triple.type.prefix.prefixValue;}else{initialValue=triple.value.value;initialPrefix=triple.value.prefix.prefixValue;}var _useState=useState(initialValue),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState(initialPrefix),_useState4=_slicedToArray(_useState3,2),prefix=_useState4[0],setPrefix=_useState4[1];/**\n    Esto igual se puede quitar\n   */var getPrefixContex=function getPrefixContex(){var prefix='prefixShape';var context=shape.type.context;if(context=='tripleName'){prefix='prefixTriple';}if(context=='valueName'){prefix='prefixValue';}return prefix;};var handleTypeChange=function handleTypeChange(e){var value=e.target.value;if(type=='shape'){shape.type.setValue(value);}else if(type=='triple'){triple.type.setValue(value);}else{triple.value.setValue(value);}context.emit();setValue(value);};var handlePrefixChange=function handlePrefixChange(e){var prefix=getPrefix(e.target.value);if(type=='shape'){shape.type.setPrefix(prefix);}else if(type=='triple'){triple.type.setPrefix(prefix);}else{triple.value.setPrefix(prefix);}context.emit();setPrefix(e.target.value);};return React.createElement(\"div\",{className:\"row col-6\"},React.createElement(\"select\",{className:getPrefixContex()+' col-5 form-control',value:prefix,onChange:handlePrefixChange},context.prefixes.map(function(pre){return React.createElement(\"option\",{key:pre.key,value:pre.val},pre.key);})),React.createElement(\"input\",{className:shape.type.value+' form-control col',context:\"text\",value:value,onChange:handleTypeChange}));}export default PrefixedComp;","map":{"version":3,"sources":["/home/mistermboy/repositories/shex-author/src/components/shexComponents/types/concrete/PrefixedComp.js"],"names":["React","useState","useContext","useEffect","ShapesContext","getPrefix","PrefixedComp","props","context","shape","triple","type","initialValue","value","initialPrefix","prefix","prefixValue","setValue","setPrefix","getPrefixContex","handleTypeChange","e","target","emit","handlePrefixChange","prefixes","map","pre","key","val"],"mappings":"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","sourcesContent":["import React,{useState,useContext,useEffect} from 'react';\nimport {ShapesContext} from '../../../../App';\nimport {getPrefix} from '../../../../utils/prefixUtils';\n\nfunction PrefixedComp (props) {\n\n    const context = useContext(ShapesContext);\n \n    const {shape,triple,type} = props;\n\n    let initialValue = shape.type.value;\n    //We can't initializae initialPrefix \n    //beacause if it is called by a triple \n    //we don't know its shape's type\n    let initialPrefix; \n    if(type=='shape'){\n      initialPrefix = shape.type.prefix.prefixValue;\n    }else if(type =='triple'){\n      initialValue = triple.type.value;\n      initialPrefix = triple.type.prefix.prefixValue;\n    }else{ \n      initialValue = triple.value.value;\n      initialPrefix = triple.value.prefix.prefixValue;\n    }\n\n    const [value,setValue] = useState(initialValue);\n    const [prefix,setPrefix] = useState(initialPrefix);\n\n\n  /**\n    Esto igual se puede quitar\n   */\n   const getPrefixContex = ()=>{\n        let prefix = 'prefixShape';\n        let context = shape.type.context;\n        if( context == 'tripleName'){\n            prefix = 'prefixTriple';\n        }\n        if( context == 'valueName'){\n            prefix = 'prefixValue';\n        }\n        return prefix;\n    }\n\n    const handleTypeChange = (e) =>{\n        const value = e.target.value;\n        if(type == 'shape'){\n          shape.type.setValue(value);\n        }else if(type == 'triple'){\n          triple.type.setValue(value);\n        }else{\n          triple.value.setValue(value);            \n        }\n        context.emit();\n        setValue(value);\n    }\n\n    const handlePrefixChange = (e) =>{\n      let prefix = getPrefix(e.target.value);\n\n      if(type == 'shape'){\n        shape.type.setPrefix(prefix);\n      }else if(type == 'triple'){\n        triple.type.setPrefix(prefix);  \n      }else{\n        triple.value.setPrefix(prefix);  \n      }\n\n      context.emit();\n      setPrefix(e.target.value);\n    }\n\n    return  (<div className='row col-6'>\n                <select className={getPrefixContex()+' col-5 form-control'}\n                        value={prefix}\n                        onChange={handlePrefixChange}>\n                 \n                  { \n                    context.prefixes.map((pre) =>{\n                      return <option key={pre.key} value={pre.val}>{pre.key}</option>\n                    })\n                  }\n                </select>\n                   \n                <input  className={shape.type.value+' form-control col'} \n                        context=\"text\" \n                        value={value}\n                        onChange={handleTypeChange} />\n               \n              </div>);\n              \n                               \n    \n\n}\n\n\n    \n\nexport default PrefixedComp;\n\n"]},"metadata":{},"sourceType":"module"}