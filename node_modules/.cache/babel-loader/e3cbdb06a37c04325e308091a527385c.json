{"ast":null,"code":"import TypesFactory from './types/typesFactory';\nimport IrirRef from './types/concreteTypes/iriRef';\nimport InlineShape from './shexUtils/inlineShape';\n\nclass Triple {\n  constructor(id, type = new IrirRef('tripleName'), value = new IrirRef(), inlineShape = new InlineShape(), cardinality = '') {\n    this.id = id;\n    this.type = type;\n    this.value = value;\n    this.cardinality = cardinality;\n    this.inlineShape = inlineShape;\n    this.factory = new TypesFactory();\n  }\n\n  addValue(value) {\n    this.values.push(value);\n    this.valuesCount++;\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  getType() {\n    return this.type;\n  }\n\n  setType(type) {\n    this.type = this.factory.createType(type, 'tripleName');\n  }\n\n  setValue(value) {\n    this.value = this.factory.createType(value, 'valueName');\n    ;\n  }\n\n  setCardinality(cardinality) {\n    this.cardinality = cardinality;\n  }\n\n  getInlineShape() {\n    return this.inlineShape;\n  }\n\n  setInlineShape(inlineShape) {\n    this.inlineShape = inlineShape;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  getCardinality() {\n    return this.cardinality;\n  }\n\n  toString() {\n    return '  ' + this.getType().toString() + '          ' + this.getValue().toString() + ' ' + this.getInlineShape().toString() + this.getCardinality() + '  ;\\n';\n  }\n\n}\n\nexport default Triple;","map":{"version":3,"sources":["/home/mistermboy/repositories/shex-author/src/entities/shexEntities/triple.js"],"names":["TypesFactory","IrirRef","InlineShape","Triple","constructor","id","type","value","inlineShape","cardinality","factory","addValue","values","push","valuesCount","getId","getType","setType","createType","setValue","setCardinality","getInlineShape","setInlineShape","getValue","getCardinality","toString"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,sBAAzB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,MAAMC,MAAN,CAAa;AAGTC,EAAAA,WAAW,CAACC,EAAD,EAAIC,IAAI,GAAC,IAAIL,OAAJ,CAAY,YAAZ,CAAT,EAAmCM,KAAK,GAAC,IAAIN,OAAJ,EAAzC,EAAuDO,WAAW,GAAC,IAAIN,WAAJ,EAAnE,EAAqFO,WAAW,GAAC,EAAjG,EAAqG;AAC5G,SAAKJ,EAAL,GAAUA,EAAV;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKE,WAAL,GAAmBA,WAAnB;AACA,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKE,OAAL,GAAe,IAAIV,YAAJ,EAAf;AACD;;AAEHW,EAAAA,QAAQ,CAACJ,KAAD,EAAO;AACX,SAAKK,MAAL,CAAYC,IAAZ,CAAiBN,KAAjB;AACA,SAAKO,WAAL;AACH;;AAEDC,EAAAA,KAAK,GAAE;AACH,WAAO,KAAKV,EAAZ;AACH;;AAEDW,EAAAA,OAAO,GAAE;AACP,WAAO,KAAKV,IAAZ;AACD;;AAEDW,EAAAA,OAAO,CAACX,IAAD,EAAM;AACV,SAAKA,IAAL,GAAY,KAAKI,OAAL,CAAaQ,UAAb,CAAwBZ,IAAxB,EAA6B,YAA7B,CAAZ;AACD;;AAEFa,EAAAA,QAAQ,CAACZ,KAAD,EAAO;AACX,SAAKA,KAAL,GAAa,KAAKG,OAAL,CAAaQ,UAAb,CAAwBX,KAAxB,EAA8B,WAA9B,CAAb;AAAwD;AAC3D;;AAEDa,EAAAA,cAAc,CAACX,WAAD,EAAa;AACvB,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAEDY,EAAAA,cAAc,GAAE;AACZ,WAAO,KAAKb,WAAZ;AACH;;AAEDc,EAAAA,cAAc,CAACd,WAAD,EAAa;AACvB,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAGDe,EAAAA,QAAQ,GAAE;AACP,WAAO,KAAKhB,KAAZ;AACF;;AAGDiB,EAAAA,cAAc,GAAE;AACZ,WAAO,KAAKf,WAAZ;AACH;;AAIDgB,EAAAA,QAAQ,GAAE;AACN,WAAO,OAAK,KAAKT,OAAL,GAAeS,QAAf,EAAL,GAA+B,YAA/B,GACP,KAAKF,QAAL,GAAgBE,QAAhB,EADO,GACqB,GADrB,GAEP,KAAKJ,cAAL,GAAsBI,QAAtB,EAFO,GAGP,KAAKD,cAAL,EAHO,GAGe,OAHtB;AAKH;;AA/DQ;;AAoEb,eAAerB,MAAf","sourcesContent":["import TypesFactory from './types/typesFactory';\nimport IrirRef from './types/concreteTypes/iriRef';\nimport InlineShape from './shexUtils/inlineShape';\n\nclass Triple {\n\n\n    constructor(id,type=new IrirRef('tripleName'),value=new IrirRef(),inlineShape=new InlineShape(),cardinality='') {\n        this.id = id;\n        this.type = type;\n        this.value = value;\n        this.cardinality = cardinality;\n        this.inlineShape = inlineShape;\n        this.factory = new TypesFactory();\n      }\n      \n    addValue(value){\n        this.values.push(value);\n        this.valuesCount++;\n    }\n\n    getId(){\n        return this.id;\n    }\n\n    getType(){\n      return this.type; \n    }\n\n    setType(type){\n       this.type = this.factory.createType(type,'tripleName');\n     }\n\n    setValue(value){\n        this.value = this.factory.createType(value,'valueName');;\n    }\n\n    setCardinality(cardinality){\n        this.cardinality = cardinality;\n    }\n\n    getInlineShape(){\n        return this.inlineShape;\n    }\n\n    setInlineShape(inlineShape){\n        this.inlineShape = inlineShape;\n    }\n\n\n    getValue(){\n       return this.value;\n    }\n\n\n    getCardinality(){\n        return this.cardinality;\n    }\n\n\n\n    toString(){\n        return '  '+this.getType().toString()+'          '+\n        this.getValue().toString() +' '+\n        this.getInlineShape().toString()+\n        this.getCardinality()+'  ;\\n';\n\n    }\n\n\n}\n\nexport default Triple;"]},"metadata":{},"sourceType":"module"}