{"ast":null,"code":"import _classCallCheck from\"/home/mistermboy/repositories/shex-author/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mistermboy/repositories/shex-author/node_modules/@babel/runtime/helpers/esm/createClass\";import TypesFactory from'./types/typesFactory';import IrirRef from'./types/concreteTypes/iriRef';import InlineShape from'./shexUtils/inlineShape';var Triple=/*#__PURE__*/function(){function Triple(id){var type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new IrirRef('tripleName');var value=arguments.length>2&&arguments[2]!==undefined?arguments[2]:new IrirRef();var inlineShape=arguments.length>3&&arguments[3]!==undefined?arguments[3]:new InlineShape();var cardinality=arguments.length>4&&arguments[4]!==undefined?arguments[4]:'';_classCallCheck(this,Triple);this.id=id;this.type=type;this.value=value;this.cardinality=cardinality;this.inlineShape=inlineShape;this.factory=new TypesFactory();}_createClass(Triple,[{key:\"addValue\",value:function addValue(value){this.values.push(value);this.valuesCount++;}},{key:\"getId\",value:function getId(){return this.id;}},{key:\"getType\",value:function getType(){return this.type;}},{key:\"setType\",value:function setType(type){this.type=this.factory.createType(type,'tripleName');}},{key:\"setValue\",value:function setValue(value){this.value=this.factory.createType(value,'valueName');;}},{key:\"setCardinality\",value:function setCardinality(cardinality){this.cardinality=cardinality;}},{key:\"getInlineShape\",value:function getInlineShape(){return this.inlineShape;}},{key:\"setInlineShape\",value:function setInlineShape(inlineShape){this.inlineShape=inlineShape;}},{key:\"getValue\",value:function getValue(){return this.value;}},{key:\"getCardinality\",value:function getCardinality(){return this.cardinality;}},{key:\"toString\",value:function toString(){return'  '+this.getType().toString()+'          '+this.getValue().toString()+' '+this.getInlineShape().toString()+this.getCardinality()+'  ;\\n';}}]);return Triple;}();export default Triple;","map":{"version":3,"sources":["/home/mistermboy/repositories/shex-author/src/entities/shexEntities/triple.js"],"names":["TypesFactory","IrirRef","InlineShape","Triple","id","type","value","inlineShape","cardinality","factory","values","push","valuesCount","createType","getType","toString","getValue","getInlineShape","getCardinality"],"mappings":"sPAAA,MAAOA,CAAAA,YAAP,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,8BAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,C,GAEMC,CAAAA,M,yBAGF,gBAAYC,EAAZ,CAAgH,IAAjGC,CAAAA,IAAiG,2DAA5F,GAAIJ,CAAAA,OAAJ,CAAY,YAAZ,CAA4F,IAAlEK,CAAAA,KAAkE,2DAA5D,GAAIL,CAAAA,OAAJ,EAA4D,IAA9CM,CAAAA,WAA8C,2DAAlC,GAAIL,CAAAA,WAAJ,EAAkC,IAAhBM,CAAAA,WAAgB,2DAAJ,EAAI,8BAC5G,KAAKJ,EAAL,CAAUA,EAAV,CACA,KAAKC,IAAL,CAAYA,IAAZ,CACA,KAAKC,KAAL,CAAaA,KAAb,CACA,KAAKE,WAAL,CAAmBA,WAAnB,CACA,KAAKD,WAAL,CAAmBA,WAAnB,CACA,KAAKE,OAAL,CAAe,GAAIT,CAAAA,YAAJ,EAAf,CACD,C,6DAEMM,K,CAAM,CACX,KAAKI,MAAL,CAAYC,IAAZ,CAAiBL,KAAjB,EACA,KAAKM,WAAL,GACH,C,qCAEM,CACH,MAAO,MAAKR,EAAZ,CACH,C,yCAEQ,CACP,MAAO,MAAKC,IAAZ,CACD,C,wCAEOA,I,CAAK,CACV,KAAKA,IAAL,CAAY,KAAKI,OAAL,CAAaI,UAAb,CAAwBR,IAAxB,CAA6B,YAA7B,CAAZ,CACD,C,0CAEOC,K,CAAM,CACX,KAAKA,KAAL,CAAa,KAAKG,OAAL,CAAaI,UAAb,CAAwBP,KAAxB,CAA8B,WAA9B,CAAb,CAAwD,CAC3D,C,sDAEcE,W,CAAY,CACvB,KAAKA,WAAL,CAAmBA,WAAnB,CACH,C,uDAEe,CACZ,MAAO,MAAKD,WAAZ,CACH,C,sDAEcA,W,CAAY,CACvB,KAAKA,WAAL,CAAmBA,WAAnB,CACH,C,2CAGS,CACP,MAAO,MAAKD,KAAZ,CACF,C,uDAGe,CACZ,MAAO,MAAKE,WAAZ,CACH,C,2CAIS,CACN,MAAO,KAAK,KAAKM,OAAL,GAAeC,QAAf,EAAL,CAA+B,YAA/B,CACP,KAAKC,QAAL,GAAgBD,QAAhB,EADO,CACqB,GADrB,CAEP,KAAKE,cAAL,GAAsBF,QAAtB,EAFO,CAGP,KAAKG,cAAL,EAHO,CAGe,OAHtB,CAKH,C,sBAKL,cAAef,CAAAA,MAAf","sourcesContent":["import TypesFactory from './types/typesFactory';\nimport IrirRef from './types/concreteTypes/iriRef';\nimport InlineShape from './shexUtils/inlineShape';\n\nclass Triple {\n\n\n    constructor(id,type=new IrirRef('tripleName'),value=new IrirRef(),inlineShape=new InlineShape(),cardinality='') {\n        this.id = id;\n        this.type = type;\n        this.value = value;\n        this.cardinality = cardinality;\n        this.inlineShape = inlineShape;\n        this.factory = new TypesFactory();\n      }\n      \n    addValue(value){\n        this.values.push(value);\n        this.valuesCount++;\n    }\n\n    getId(){\n        return this.id;\n    }\n\n    getType(){\n      return this.type; \n    }\n\n    setType(type){\n       this.type = this.factory.createType(type,'tripleName');\n     }\n\n    setValue(value){\n        this.value = this.factory.createType(value,'valueName');;\n    }\n\n    setCardinality(cardinality){\n        this.cardinality = cardinality;\n    }\n\n    getInlineShape(){\n        return this.inlineShape;\n    }\n\n    setInlineShape(inlineShape){\n        this.inlineShape = inlineShape;\n    }\n\n\n    getValue(){\n       return this.value;\n    }\n\n\n    getCardinality(){\n        return this.cardinality;\n    }\n\n\n\n    toString(){\n        return '  '+this.getType().toString()+'          '+\n        this.getValue().toString() +' '+\n        this.getInlineShape().toString()+\n        this.getCardinality()+'  ;\\n';\n\n    }\n\n\n}\n\nexport default Triple;"]},"metadata":{},"sourceType":"module"}