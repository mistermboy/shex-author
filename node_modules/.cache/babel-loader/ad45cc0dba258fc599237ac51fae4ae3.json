{"ast":null,"code":"import Type from '../type';\nconst PRIMITIVES = ['String', 'Integer', 'Date', 'Boolean'];\n\nclass Primitive extends Type {\n  constructor(value = 'string') {\n    super(value);\n  }\n\n  getTypeName() {\n    return 'primitive';\n  }\n\n  toString() {\n    return 'xsd:' + this.getValue();\n  }\n\n}\n\nexport default Primitive;","map":{"version":3,"sources":["/home/mistermboy/repositories/shex-author/src/entities/shexEntities/types/concreteTypes/primitive.js"],"names":["Type","PRIMITIVES","Primitive","constructor","value","getTypeName","toString","getValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAEA,MAAMC,UAAU,GAAG,CAAC,QAAD,EAAU,SAAV,EAAoB,MAApB,EAA2B,SAA3B,CAAnB;;AAEA,MAAMC,SAAN,SAAwBF,IAAxB,CAA4B;AAEvBG,EAAAA,WAAW,CAACC,KAAK,GAAC,QAAP,EAAgB;AACxB,UAAMA,KAAN;AACH;;AAEDC,EAAAA,WAAW,GAAE;AACT,WAAO,WAAP;AACH;;AAEDC,EAAAA,QAAQ,GAAE;AACN,WAAO,SAAO,KAAKC,QAAL,EAAd;AACH;;AAZuB;;AAkB5B,eAAeL,SAAf","sourcesContent":["import Type from '../type';\n\nconst PRIMITIVES = ['String','Integer','Date','Boolean'];\n\nclass Primitive extends Type{\n\n     constructor(value='string'){\n        super(value);\n    }\n\n    getTypeName(){\n        return 'primitive';\n    }\n\n    toString(){\n        return 'xsd:'+this.getValue();\n    }\n\n\n\n}\n\nexport default Primitive;"]},"metadata":{},"sourceType":"module"}