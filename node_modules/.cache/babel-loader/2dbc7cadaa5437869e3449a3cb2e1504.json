{"ast":null,"code":"import _slicedToArray from\"/home/mistermboy/repositories/shex-author/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import{ShapesContext}from'../../../App';import shexUtils from'../../../utils/shexUtils';function Qualifier(props){var context=useContext(ShapesContext);var shape=props.shape,triple=props.triple,value=props.value,scope=props.scope;var initialValue;if(scope=='shape'){initialValue=shape.qualifier.getTypeName();}else{initialValue=triple.value.value;}var _useState=useState(initialValue),_useState2=_slicedToArray(_useState,2),valueType=_useState2[0],setValueType=_useState2[1];var handleTypeChange=function handleTypeChange(e){var newType=e.target.value;if(scope=='shape'){shape.setQualifier(newType);}else{triple.value.value=newType;}context.emit();setValueType(newType);};return React.createElement(\"select\",{className:\"col form-control valueInlineShape\",value:valueType,onChange:handleTypeChange},React.createElement(\"option\",{value:\"shape\"}),React.createElement(\"option\",{value:\"iri\"},\"IRI\"),React.createElement(\"option\",{value:\"literal\"},\"Literal\"),React.createElement(\"option\",{value:\"nonliteral\"},\"NonLiteral\"),React.createElement(\"option\",{value:\"bnode\"},\"BNODE\"));}export default Qualifier;","map":{"version":3,"sources":["/home/mistermboy/repositories/shex-author/src/components/shexComponents/qualifier/Qualifier.js"],"names":["React","useState","useContext","ShapesContext","shexUtils","Qualifier","props","context","shape","triple","value","scope","initialValue","qualifier","getTypeName","valueType","setValueType","handleTypeChange","e","newType","target","setQualifier","emit"],"mappings":"4HAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,UAAvB,KAAwC,OAAxC,CACA,OAAQC,aAAR,KAA4B,cAA5B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CAGA,QAASC,CAAAA,SAAT,CAAoBC,KAApB,CAA2B,CAEvB,GAAMC,CAAAA,OAAO,CAAGL,UAAU,CAACC,aAAD,CAA1B,CAFuB,GAGhBK,CAAAA,KAHgB,CAGYF,KAHZ,CAGhBE,KAHgB,CAGVC,MAHU,CAGYH,KAHZ,CAGVG,MAHU,CAGHC,KAHG,CAGYJ,KAHZ,CAGHI,KAHG,CAGGC,KAHH,CAGYL,KAHZ,CAGGK,KAHH,CAKvB,GAAIC,CAAAA,YAAJ,CACA,GAAGD,KAAK,EAAE,OAAV,CAAkB,CACdC,YAAY,CAAGJ,KAAK,CAACK,SAAN,CAAgBC,WAAhB,EAAf,CACH,CAFD,IAEK,CACAF,YAAY,CAAGH,MAAM,CAACC,KAAP,CAAaA,KAA5B,CACJ,CAVsB,cAaUT,QAAQ,CAACW,YAAD,CAblB,wCAahBG,SAbgB,eAaNC,YAbM,eAevB,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,CAAD,CAAM,CAC3B,GAAIC,CAAAA,OAAO,CAAGD,CAAC,CAACE,MAAF,CAASV,KAAvB,CACA,GAAGC,KAAK,EAAE,OAAV,CAAkB,CACdH,KAAK,CAACa,YAAN,CAAmBF,OAAnB,EACH,CAFD,IAEK,CACDV,MAAM,CAACC,KAAP,CAAaA,KAAb,CAAoBS,OAApB,CACH,CAEDZ,OAAO,CAACe,IAAR,GACAN,YAAY,CAACG,OAAD,CAAZ,CACH,CAVD,CAaA,MAAQ,+BAAQ,SAAS,CAAC,mCAAlB,CACY,KAAK,CAAEJ,SADnB,CAEY,QAAQ,CAAEE,gBAFtB,EAGQ,8BAAQ,KAAK,CAAC,OAAd,EAHR,CAIQ,8BAAQ,KAAK,CAAC,KAAd,QAJR,CAKQ,8BAAQ,KAAK,CAAC,SAAd,YALR,CAMQ,8BAAQ,KAAK,CAAC,YAAd,eANR,CAOQ,8BAAQ,KAAK,CAAC,OAAd,UAPR,CAAR,CAYH,CAED,cAAeZ,CAAAA,SAAf","sourcesContent":["import React,{useState,useContext} from 'react';\nimport {ShapesContext} from '../../../App';\n\nimport shexUtils from '../../../utils/shexUtils';\n\n\nfunction Qualifier (props) {\n\n    const context = useContext(ShapesContext);\n    const {shape,triple,value,scope} = props;\n\n    let initialValue;\n    if(scope=='shape'){\n        initialValue = shape.qualifier.getTypeName();\n    }else{\n         initialValue = triple.value.value;\n    }\n\n\n    const [valueType,setValueType] = useState(initialValue)\n\n    const handleTypeChange = (e) =>{\n        let newType = e.target.value;\n        if(scope=='shape'){\n            shape.setQualifier(newType);\n        }else{\n            triple.value.value =newType;\n        }\n\n        context.emit();\n        setValueType(newType);\n    }\n\n\n    return (<select className=\"col form-control valueInlineShape\"\n                        value={valueType}\n                        onChange={handleTypeChange}>\n                    <option value='shape'></option>\n                    <option value='iri'>IRI</option>\n                    <option value=\"literal\">Literal</option>\n                    <option value=\"nonliteral\">NonLiteral</option>\n                    <option value=\"bnode\">BNODE</option>\n                </select>\n\n    );\n    \n}\n\nexport default Qualifier;\n\n"]},"metadata":{},"sourceType":"module"}