{"ast":null,"code":"import React from'react';import Codemirror from'codemirror';import Editor from'../../entities/editor';function PrefixSelector(props){var namespaces=props.namespaces;var handleChange=function handleChange(e){var yashe=Editor.getInstance().getYashe();var current=yashe.getValue();var defined=yashe.getDefinedPrefixes();var prefix=e.target.value;var uri='http://example.org/';//getUri\nfor(var def in namespaces){for(var p in namespaces[def]){if(p==prefix)uri=namespaces[def][p];}}yashe.setValue('PREFIX '+prefix+': <'+uri+'>\\n'+current);Codemirror.signal(yashe,'prefixUpdate');};return React.createElement(\"div\",null,React.createElement(\"button\",{className:\"form-control\",onClick:handleChange},\"Example Prefix\"),Object.keys(namespaces).map(function(key){return React.createElement(\"div\",{key:key},React.createElement(\"select\",{className:\"form-control\",onChange:handleChange},React.createElement(\"option\",null,key),Object.keys(namespaces[key]).map(function(prefix){return React.createElement(\"option\",{key:prefix,value:prefix},prefix);})));}));}export default PrefixSelector;","map":{"version":3,"sources":["/home/mistermboy/repositories/shex-author/src/components/navComponents/PrefixSelector.js"],"names":["React","Codemirror","Editor","PrefixSelector","props","namespaces","handleChange","e","yashe","getInstance","getYashe","current","getValue","defined","getDefinedPrefixes","prefix","target","value","uri","def","p","setValue","signal","Object","keys","map","key"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CAEA,QAASC,CAAAA,cAAT,CAAyBC,KAAzB,CAA+B,IAEpBC,CAAAA,UAFoB,CAEND,KAFM,CAEpBC,UAFoB,CAK3B,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAM,CACvB,GAAIC,CAAAA,KAAK,CAAGN,MAAM,CAACO,WAAP,GAAqBC,QAArB,EAAZ,CACA,GAAIC,CAAAA,OAAO,CAAGH,KAAK,CAACI,QAAN,EAAd,CACA,GAAIC,CAAAA,OAAO,CAAGL,KAAK,CAACM,kBAAN,EAAd,CACA,GAAIC,CAAAA,MAAM,CAAER,CAAC,CAACS,MAAF,CAASC,KAArB,CACA,GAAIC,CAAAA,GAAG,CAAG,qBAAV,CACA;AACA,IAAI,GAAIC,CAAAA,GAAR,GAAed,CAAAA,UAAf,CAA0B,CACxB,IAAI,GAAIe,CAAAA,CAAR,GAAaf,CAAAA,UAAU,CAACc,GAAD,CAAvB,CAA6B,CAC3B,GAAGC,CAAC,EAAEL,MAAN,CACEG,GAAG,CAAGb,UAAU,CAACc,GAAD,CAAV,CAAgBC,CAAhB,CAAN,CACH,CACF,CACDZ,KAAK,CAACa,QAAN,CAAgB,UAAYN,MAAZ,CAAqB,KAArB,CAA6BG,GAA7B,CAAmC,KAAnC,CAA2CP,OAA3D,EACAV,UAAU,CAACqB,MAAX,CAAkBd,KAAlB,CAAwB,cAAxB,EACH,CAfD,CAiBA,MAAQ,gCAEI,8BAAQ,SAAS,CAAC,cAAlB,CACQ,OAAO,CAAEF,YADjB,mBAFJ,CASQiB,MAAM,CAACC,IAAP,CAAYnB,UAAZ,EAAwBoB,GAAxB,CAA6B,SAACC,GAAD,CAAQ,CAC7B,MAAO,4BAAK,GAAG,CAAEA,GAAV,EACK,8BAAS,SAAS,CAAC,cAAnB,CACS,QAAQ,CAAEpB,YADnB,EAEI,kCAASoB,GAAT,CAFJ,CAIQH,MAAM,CAACC,IAAP,CAAYnB,UAAU,CAACqB,GAAD,CAAtB,EAA6BD,GAA7B,CAAkC,SAACV,MAAD,CAAW,CACzC,MAAO,+BAAQ,GAAG,CAAEA,MAAb,CAAqB,KAAK,CAAEA,MAA5B,EAAqCA,MAArC,CAAP,CACH,CAFD,CAJR,CADL,CAAP,CAYP,CAbD,CATR,CAAR,CA0BH,CAGD,cAAeZ,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport Codemirror from 'codemirror';\nimport Editor from '../../entities/editor';\n\nfunction PrefixSelector (props){\n\n    const {namespaces} = props;\n\n\n    const handleChange = (e) =>{\n        let yashe = Editor.getInstance().getYashe();\n        let current = yashe.getValue();\n        let defined = yashe.getDefinedPrefixes();\n        let prefix= e.target.value;\n        let uri = 'http://example.org/';\n        //getUri\n        for(let def in namespaces){\n          for(let p in namespaces[def]){\n            if(p==prefix)\n              uri = namespaces[def][p];\n          }\n        }\n        yashe.setValue( 'PREFIX ' + prefix + ': <' + uri + '>\\n' + current );\n        Codemirror.signal(yashe,'prefixUpdate');\n    }\n\n    return (<div>\n             \n                <button className='form-control'\n                        onClick={handleChange}>\n                        Example Prefix\n                </button>\n\n                {\n                    \n                    Object.keys(namespaces).map( (key) =>{\n                            return <div key={key}>\n                                        <select  className='form-control'\n                                                 onChange={handleChange}>\n                                            <option>{key}</option>\n                                            { \n                                                Object.keys(namespaces[key]).map( (prefix) =>{\n                                                    return <option key={prefix} value={prefix}>{prefix}</option>\n                                                })  \n                                            }\n                                        </select>\n                                    </div>\n                                    \n                    }) \n                }\n            </div>);\n                     \n}\n\n\nexport default PrefixSelector;\n"]},"metadata":{},"sourceType":"module"}