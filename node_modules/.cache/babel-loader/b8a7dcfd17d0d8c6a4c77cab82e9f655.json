{"ast":null,"code":"var _jsxFileName = \"/home/mistermboy/repositories/shex-author/src/components/navComponents/PrefixSelector.js\";\nimport React from 'react';\nimport Codemirror from 'codemirror';\nimport Editor from '../../entities/editor';\n\nfunction PrefixSelector(props) {\n  const namespaces = props.namespaces;\n\n  const handleChange = e => {\n    let yashe = Editor.getInstance().getYashe();\n    let current = yashe.getValue();\n    let defined = yashe.getDefinedPrefixes();\n    let prefix = e.target.value;\n    let uri = 'http://example.org/'; //getUri\n\n    for (let def in namespaces) {\n      for (let p in namespaces[def]) {\n        if (p == prefix) uri = namespaces[def][p];\n      }\n    }\n\n    yashe.setValue('PREFIX ' + prefix + ': <' + uri + '>\\n' + current);\n    Codemirror.signal(yashe, 'prefixUpdate');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"form-control\",\n    onClick: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Example Prefix\"), Object.keys(namespaces).map(key => {\n    return React.createElement(\"div\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, key), Object.keys(namespaces[key]).map(prefix => {\n      return React.createElement(\"option\", {\n        key: prefix,\n        value: prefix,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, prefix);\n    })));\n  }));\n}\n\nexport default PrefixSelector;","map":{"version":3,"sources":["/home/mistermboy/repositories/shex-author/src/components/navComponents/PrefixSelector.js"],"names":["React","Codemirror","Editor","PrefixSelector","props","namespaces","handleChange","e","yashe","getInstance","getYashe","current","getValue","defined","getDefinedPrefixes","prefix","target","value","uri","def","p","setValue","signal","Object","keys","map","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,SAASC,cAAT,CAAyBC,KAAzB,EAA+B;AAAA,QAEpBC,UAFoB,GAEND,KAFM,CAEpBC,UAFoB;;AAK3B,QAAMC,YAAY,GAAIC,CAAD,IAAM;AACvB,QAAIC,KAAK,GAAGN,MAAM,CAACO,WAAP,GAAqBC,QAArB,EAAZ;AACA,QAAIC,OAAO,GAAGH,KAAK,CAACI,QAAN,EAAd;AACA,QAAIC,OAAO,GAAGL,KAAK,CAACM,kBAAN,EAAd;AACA,QAAIC,MAAM,GAAER,CAAC,CAACS,MAAF,CAASC,KAArB;AACA,QAAIC,GAAG,GAAG,qBAAV,CALuB,CAMvB;;AACA,SAAI,IAAIC,GAAR,IAAed,UAAf,EAA0B;AACxB,WAAI,IAAIe,CAAR,IAAaf,UAAU,CAACc,GAAD,CAAvB,EAA6B;AAC3B,YAAGC,CAAC,IAAEL,MAAN,EACEG,GAAG,GAAGb,UAAU,CAACc,GAAD,CAAV,CAAgBC,CAAhB,CAAN;AACH;AACF;;AACDZ,IAAAA,KAAK,CAACa,QAAN,CAAgB,YAAYN,MAAZ,GAAqB,KAArB,GAA6BG,GAA7B,GAAmC,KAAnC,GAA2CP,OAA3D;AACAV,IAAAA,UAAU,CAACqB,MAAX,CAAkBd,KAAlB,EAAwB,cAAxB;AACH,GAfD;;AAiBA,SAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AACQ,IAAA,OAAO,EAAEF,YADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EASQiB,MAAM,CAACC,IAAP,CAAYnB,UAAZ,EAAwBoB,GAAxB,CAA8BC,GAAD,IAAQ;AAC7B,WAAO;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAS,MAAA,SAAS,EAAC,cAAnB;AACS,MAAA,QAAQ,EAAEpB,YADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASoB,GAAT,CAFJ,EAIQH,MAAM,CAACC,IAAP,CAAYnB,UAAU,CAACqB,GAAD,CAAtB,EAA6BD,GAA7B,CAAmCV,MAAD,IAAW;AACzC,aAAO;AAAQ,QAAA,GAAG,EAAEA,MAAb;AAAqB,QAAA,KAAK,EAAEA,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCA,MAArC,CAAP;AACH,KAFD,CAJR,CADL,CAAP;AAYP,GAbD,CATR,CAAR;AA0BH;;AAGD,eAAeZ,cAAf","sourcesContent":["import React from 'react';\nimport Codemirror from 'codemirror';\nimport Editor from '../../entities/editor';\n\nfunction PrefixSelector (props){\n\n    const {namespaces} = props;\n\n\n    const handleChange = (e) =>{\n        let yashe = Editor.getInstance().getYashe();\n        let current = yashe.getValue();\n        let defined = yashe.getDefinedPrefixes();\n        let prefix= e.target.value;\n        let uri = 'http://example.org/';\n        //getUri\n        for(let def in namespaces){\n          for(let p in namespaces[def]){\n            if(p==prefix)\n              uri = namespaces[def][p];\n          }\n        }\n        yashe.setValue( 'PREFIX ' + prefix + ': <' + uri + '>\\n' + current );\n        Codemirror.signal(yashe,'prefixUpdate');\n    }\n\n    return (<div>\n             \n                <button className='form-control'\n                        onClick={handleChange}>\n                        Example Prefix\n                </button>\n\n                {\n                    \n                    Object.keys(namespaces).map( (key) =>{\n                            return <div key={key}>\n                                        <select  className='form-control'\n                                                 onChange={handleChange}>\n                                            <option>{key}</option>\n                                            { \n                                                Object.keys(namespaces[key]).map( (prefix) =>{\n                                                    return <option key={prefix} value={prefix}>{prefix}</option>\n                                                })  \n                                            }\n                                        </select>\n                                    </div>\n                                    \n                    }) \n                }\n            </div>);\n                     \n}\n\n\nexport default PrefixSelector;\n"]},"metadata":{},"sourceType":"module"}