{"ast":null,"code":"import _defineProperty from\"/home/mistermboy/repositories/shex-author/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"/home/mistermboy/repositories/shex-author/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/mistermboy/repositories/shex-author/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import SlideToggle from\"react-slide-toggle\";import logo from\"./logo.svg\";import'./App.css';import EditorComp from'./components/EditorComp';import AssistantComp from'./components/AssistantComp';import Nav from'./components/navComponents/Nav';import shexUtils from'./utils/shexUtils';export var ShapesContext=React.createContext();function App(){var _ref;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),shapes=_useState2[0],setShapes=_useState2[1];var _useState3=useState([{key:'',val:'http://example.org/'}]),_useState4=_slicedToArray(_useState3,2),prefixes=_useState4[0],setPrefixes=_useState4[1];var darkStyle={background:'#2B2B2B',color:'white'};var lightStyle={background:'#eaf3ff',color:'black'};var _useState5=useState(lightStyle),_useState6=_slicedToArray(_useState5,2),style=_useState6[0],setStyle=_useState6[1];var theme='light';var addShape=function addShape(){setShapes([].concat(_toConsumableArray(shapes),[shexUtils.addShape(shapes)]));};var deleteShape=function deleteShape(shapeId){setShapes(shexUtils.deleteShape(shapes,shapeId,false));};var emit=function emit(){shexUtils.emit(shapes);};var replaceShapes=function replaceShapes(newShapes){//This allows to render all the shapes when a property is updated.\n//Best Glitch Ever\nsetShapes([]);setShapes(newShapes);};var updatePrefixes=function updatePrefixes(newPrefixes){setPrefixes(newPrefixes);};var changeThemeStyle=function changeThemeStyle(){if(theme=='light'){//I don't know why this doesn't work with style state\nsetStyle(darkStyle);theme='dark';}else{theme='light';setStyle(lightStyle);}};return React.createElement(ShapesContext.Provider,{value:(_ref={shapes:shapes},_defineProperty(_ref,\"shapes\",shapes),_defineProperty(_ref,\"addShape\",addShape),_defineProperty(_ref,\"deleteShape\",deleteShape),_defineProperty(_ref,\"replaceShapes\",replaceShapes),_defineProperty(_ref,\"prefixes\",prefixes),_defineProperty(_ref,\"updatePrefixes\",updatePrefixes),_defineProperty(_ref,\"emit\",emit),_defineProperty(_ref,\"currentStyle\",style),_defineProperty(_ref,\"changeThemeStyle\",changeThemeStyle),_ref)},React.createElement(SlideToggle,{duration:500,render:function render(_ref2){var toggle=_ref2.toggle,setCollapsibleElement=_ref2.setCollapsibleElement,progress=_ref2.progress;return React.createElement(\"div\",null,React.createElement(Nav,{toggle:toggle}),React.createElement(\"div\",{className:\"row separator\",style:style},React.createElement(AssistantComp,{colapse:setCollapsibleElement,initialShapes:shapes}),React.createElement(EditorComp,null)));}}));}export default App;","map":{"version":3,"sources":["/home/mistermboy/repositories/shex-author/src/App.js"],"names":["React","useState","SlideToggle","EditorComp","AssistantComp","Nav","shexUtils","ShapesContext","createContext","App","shapes","setShapes","key","val","prefixes","setPrefixes","darkStyle","background","color","lightStyle","style","setStyle","theme","addShape","deleteShape","shapeId","emit","replaceShapes","newShapes","updatePrefixes","newPrefixes","changeThemeStyle","toggle","setCollapsibleElement","progress"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport SlideToggle from \"react-slide-toggle\";\nimport logo from './logo.svg';\nimport './App.css';\n\nimport EditorComp from './components/EditorComp';\nimport AssistantComp from './components/AssistantComp';\nimport Nav from './components/navComponents/Nav';\n\nimport shexUtils from './utils/shexUtils';\n\n\nexport const ShapesContext = React.createContext();\n\nfunction App() {\n\n    const [shapes,setShapes] = useState([]);\n    const [prefixes,setPrefixes] = useState([{key:'',val:'http://example.org/'}]);\n\n     const darkStyle = {\n        background: '#2B2B2B',\n        color:'white'\n    }\n\n    const lightStyle = {\n        background: '#eaf3ff',\n        color:'black'\n    }\n\n    const [style,setStyle] = useState(lightStyle);\n    let theme = 'light';\n\n    const addShape = () =>{\n      setShapes([...shapes,shexUtils.addShape(shapes)]);\n    }\n\n    const deleteShape = (shapeId) =>{\n      setShapes(shexUtils.deleteShape(shapes,shapeId,false));\n    }\n\n    const emit = ()=>{\n      shexUtils.emit(shapes);\n    }\n\n    const replaceShapes = (newShapes) =>{\n      //This allows to render all the shapes when a property is updated.\n      //Best Glitch Ever\n      setShapes([]); \n      setShapes(newShapes);\n    }\n\n    const updatePrefixes = (newPrefixes)=>{\n      setPrefixes(newPrefixes);\n    }\n    \n    const changeThemeStyle = () =>{\n      if(theme=='light'){//I don't know why this doesn't work with style state\n        setStyle(darkStyle);\n        theme='dark';\n      }else{\n        theme='light';\n        setStyle(lightStyle);\n      }\n    }\n\n  \n    return (\n            \n            <ShapesContext.Provider value={\n                                    {\n                                      shapes,shapes,\n                                      addShape:addShape,\n                                      deleteShape:deleteShape,\n                                      replaceShapes:replaceShapes,\n                                      prefixes:prefixes,\n                                      updatePrefixes:updatePrefixes,\n                                      emit:emit,\n                                      currentStyle:style,\n                                      changeThemeStyle:changeThemeStyle\n                                    }\n                                  }>\n                \n                <SlideToggle duration={500}\n                             render={({ toggle, setCollapsibleElement, progress }) => (\n                              <div> \n                                  <Nav toggle={toggle}/>\n                                  <div className=\"row separator\" style={style}> \n                                      <AssistantComp colapse={setCollapsibleElement} initialShapes={shapes} />\n                                      <EditorComp />\n                                      \n                                  </div>\n                              </div>                              \n                  )}/>\n\n\n            </ShapesContext.Provider>\n          );\n                       \n           \n  \n    \n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}