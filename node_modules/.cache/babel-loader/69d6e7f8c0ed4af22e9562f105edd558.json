{"ast":null,"code":"import _slicedToArray from \"/home/mistermboy/repositories/shex-author/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mistermboy/repositories/shex-author/src/components/shexComponents/utils/Qualifier.js\";\nimport React, { useState, useContext } from 'react';\nimport { ShapesContext } from '../../../App';\nimport shexUtils from '../../../utils/shexUtils';\n\nfunction Qualifier(props) {\n  const context = useContext(ShapesContext);\n  const shape = props.shape,\n        triple = props.triple,\n        value = props.value,\n        scope = props.scope;\n  let initialValue;\n\n  if (scope == 'shape') {\n    initialValue = shape.qualifier.getTypeName();\n  } else {\n    initialValue = triple.value.value;\n  }\n\n  const _useState = useState(initialValue),\n        _useState2 = _slicedToArray(_useState, 2),\n        valueType = _useState2[0],\n        setValueType = _useState2[1];\n\n  const handleTypeChange = e => {\n    let newType = e.target.value;\n\n    if (scope == 'shape') {\n      shape.setQualifier(newType);\n    } else {\n      triple.value.value = newType;\n    }\n\n    context.emit();\n    setValueType(newType);\n  };\n\n  return React.createElement(\"select\", {\n    className: \"col form-control valueInlineShape\",\n    value: valueType,\n    onChange: handleTypeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"shape\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"iri\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"IRI\"), React.createElement(\"option\", {\n    value: \"literal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Literal\"), React.createElement(\"option\", {\n    value: \"nonliteral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"NonLiteral\"), React.createElement(\"option\", {\n    value: \"bnode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"BNODE\"));\n}\n\nexport default Qualifier;","map":{"version":3,"sources":["/home/mistermboy/repositories/shex-author/src/components/shexComponents/utils/Qualifier.js"],"names":["React","useState","useContext","ShapesContext","shexUtils","Qualifier","props","context","shape","triple","value","scope","initialValue","qualifier","getTypeName","valueType","setValueType","handleTypeChange","e","newType","target","setQualifier","emit"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,UAAvB,QAAwC,OAAxC;AACA,SAAQC,aAAR,QAA4B,cAA5B;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;;AAGA,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAEvB,QAAMC,OAAO,GAAGL,UAAU,CAACC,aAAD,CAA1B;AAFuB,QAGhBK,KAHgB,GAGYF,KAHZ,CAGhBE,KAHgB;AAAA,QAGVC,MAHU,GAGYH,KAHZ,CAGVG,MAHU;AAAA,QAGHC,KAHG,GAGYJ,KAHZ,CAGHI,KAHG;AAAA,QAGGC,KAHH,GAGYL,KAHZ,CAGGK,KAHH;AAKvB,MAAIC,YAAJ;;AACA,MAAGD,KAAK,IAAE,OAAV,EAAkB;AACdC,IAAAA,YAAY,GAAGJ,KAAK,CAACK,SAAN,CAAgBC,WAAhB,EAAf;AACH,GAFD,MAEK;AACAF,IAAAA,YAAY,GAAGH,MAAM,CAACC,KAAP,CAAaA,KAA5B;AACJ;;AAVsB,oBAaUT,QAAQ,CAACW,YAAD,CAblB;AAAA;AAAA,QAahBG,SAbgB;AAAA,QAaNC,YAbM;;AAevB,QAAMC,gBAAgB,GAAIC,CAAD,IAAM;AAC3B,QAAIC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASV,KAAvB;;AACA,QAAGC,KAAK,IAAE,OAAV,EAAkB;AACdH,MAAAA,KAAK,CAACa,YAAN,CAAmBF,OAAnB;AACH,KAFD,MAEK;AACDV,MAAAA,MAAM,CAACC,KAAP,CAAaA,KAAb,GAAoBS,OAApB;AACH;;AAEDZ,IAAAA,OAAO,CAACe,IAAR;AACAN,IAAAA,YAAY,CAACG,OAAD,CAAZ;AACH,GAVD;;AAaA,SAAQ;AAAQ,IAAA,SAAS,EAAC,mCAAlB;AACY,IAAA,KAAK,EAAEJ,SADnB;AAEY,IAAA,QAAQ,EAAEE,gBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQ;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,EAIQ;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJR,EAKQ;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALR,EAMQ;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANR,EAOQ;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPR,CAAR;AAYH;;AAED,eAAeZ,SAAf","sourcesContent":["import React,{useState,useContext} from 'react';\nimport {ShapesContext} from '../../../App';\n\nimport shexUtils from '../../../utils/shexUtils';\n\n\nfunction Qualifier (props) {\n\n    const context = useContext(ShapesContext);\n    const {shape,triple,value,scope} = props;\n\n    let initialValue;\n    if(scope=='shape'){\n        initialValue = shape.qualifier.getTypeName();\n    }else{\n         initialValue = triple.value.value;\n    }\n\n\n    const [valueType,setValueType] = useState(initialValue)\n\n    const handleTypeChange = (e) =>{\n        let newType = e.target.value;\n        if(scope=='shape'){\n            shape.setQualifier(newType);\n        }else{\n            triple.value.value =newType;\n        }\n\n        context.emit();\n        setValueType(newType);\n    }\n\n\n    return (<select className=\"col form-control valueInlineShape\"\n                        value={valueType}\n                        onChange={handleTypeChange}>\n                    <option value='shape'></option>\n                    <option value='iri'>IRI</option>\n                    <option value=\"literal\">Literal</option>\n                    <option value=\"nonliteral\">NonLiteral</option>\n                    <option value=\"bnode\">BNODE</option>\n                </select>\n\n    );\n    \n}\n\nexport default Qualifier;\n\n"]},"metadata":{},"sourceType":"module"}