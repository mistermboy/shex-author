{"version":3,"sources":["entities/shexEntities/types/concreteTypes/prefixedIri.js","entities/shexEntities/shexUtils/prefix.js","entities/shexEntities/types/typesFactory.js","entities/shexEntities/types/concreteTypes/iriRef.js","entities/shexEntities/types/concreteTypes/primitive.js","entities/shexEntities/shape.js","entities/shexEntities/types/concreteTypes/bNode.js","entities/shexEntities/types/concreteTypes/shapeReference.js","entities/shexEntities/types/concreteTypes/kinds/blankKind.js","entities/shexEntities/types/concreteTypes/kinds/literal.js","entities/shexEntities/types/concreteTypes/kinds/nonLiteral.js","entities/shexEntities/types/concreteTypes/kinds/iriKind.js","entities/shexEntities/types/concreteTypes/kinds/bNodeKind.js","entities/shexEntities/shexUtils/inlineShape.js","logo.svg","entities/shexEntities/types/type.js","utils/shexUtils.js","utils/tokenUtils.js","entities/shexEntities/triple.js","utils/yasheUtils.js","components/EditorComp.js","components/shexComponents/types/concrete/IriComp.js","components/shexComponents/types/concrete/PrefixedComp.js","utils/prefixUtils.js","components/shexComponents/types/concrete/BNodeComp.js","components/shexComponents/types/concrete/PrimitiveComp.js","components/shexComponents/qualifier/Qualifier.js","components/shexComponents/types/concrete/ShapeRefComp.js","components/shexComponents/types/FactoryTypeComp.js","components/shexComponents/types/TripleTypeComp.js","components/shexComponents/types/ValueTypeComp.js","components/shexComponents/cardinality/CardinalityComp.js","components/shexComponents/ValueComponent.js","components/shexComponents/TripleComponent.js","components/shexComponents/types/ShapeTypeComp.js","components/shexComponents/ShapeComponent.js","components/AssistantComp.js","components/navComponents/PrefixSelector.js","utils/rdfUtils.js","components/navComponents/Nav.js","App.js","serviceWorker.js","index.js","entities/editor.js"],"names":["PrefixedIri","context","prefix","Prefix","value","this","getPrefix","getPrefixName","getValue","Type","prefixName","prefixValue","TypesFactory","type","retType","IriRef","BNode","Primitive","ShapeReference","Literal","NonLiteral","IriKind","BNodeKind","Shape","id","IrirRef","triples","qualifier","BlankKind","triplesCount","length","factory","triple","push","tripleId","filter","obj","createType","str","forEach","InlineShape","shape","getType","toString","module","exports","shapesCount","emit","newShapes","yashe","Editor","getInstance","getYashe","Codemirror","signal","inlines","shexUtils","addShape","shapes","newShape","Object","assign","deleteShape","shapeId","window","confirm","getShapeById","getShapeByName","name","s","getTripleById","getTriples","require","Triple","inlineShape","cardinality","values","valuesCount","getInlineShape","getCardinality","PRIMITIVES","getTriple","singleTriple","inlineName","ref","index","token","string","getInlineName","undefined","getTypeName","def","toLowerCase","startsWith","split","prim","isPrimitive","getPrefixValue","getDefinedPrefixes","defPrefixes","pre","getNonWsTokens","tokens","tokenUtils","getTokens","l","keys","lineCount","getLineTokens","getDefinedShapes","brackets","defShapes","element","getShapes","shapeType","getQualifier","i","getStart","updateInlines","inShape","shapeRef","setShape","yasheUtils","DEFAULT_SHAPE","replaceShapes","updatePrefixes","newPrefixes","key","val","EditorComp","useState","setYashe","textAreaRef","useRef","useContext","ShapesContext","useEffect","options","persistent","lineNumbers","viewportMargin","Infinity","y","YASHE","fromTextArea","current","on","hasErrors","draw","changeThemeStyle","setTimeout","setValue","refresh","className","IriComp","props","initialValue","onChange","e","target","PrefixedComp","initialPrefix","setPrefix","getPrefixContex","defined","prefixes","map","BNodeComp","primitives","PrimitiveComp","Qualifier","scope","valueType","setValueType","newType","setQualifier","ShapeRefComp","inlineValue","setInlineShape","inlineSelector","FactoryTypeComp","instance","TripleTypeComp","deleteTriple","handeCollapse","setType","collapseBtn","setCollapseBtn","onClick","ValueTypeComp","event","CardinalityComp","setCardinality","ValueComponent","colapse","TripleComponent","duration","collapsed","render","toggle","setCollapsibleElement","progress","ShapeTypeComp","colapseBtn","setColapseBtn","ShapeComponent","setTriples","handleChange","getTriplesCount","addTriple","newTriples","style","currentStyle","handleColapse","AssistantComp","PrefixSelector","namespaces","uri","p","ALL_PREFIXES","Wikidata","wikibase","wd","wdt","wdtn","wds","wdref","wdv","ps","psv","psn","pq","pqv","pqn","pr","prv","prn","wdno","wdata","W3C","rdfs","rdf","owl","skos","xsd","prov","schema","geo","geof","Blazegraph","bd","bds","gas","hint","Nav","data-toggle","React","createContext","App","setShapes","setPrefixes","darkStyle","background","color","lightStyle","setStyle","theme","Provider","initialShapes","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","EditorClass","getPrefixes","definedPrefixes","newContent"],"mappings":"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","file":"static/js/main.5eff87d2.chunk.js","sourcesContent":["import Type from '../type';\nimport Prefix from '../../shexUtils/prefix';\n\nclass PrefixedIri extends Type{\n\n    constructor(context,prefix=new Prefix(),value=''){\n        super(value);\n        this.context = context;\n        this.prefix = prefix;\n    }\n\n    getPrefix(){\n        return this.prefix;\n    }\n\n    setPrefix(prefix){\n        this.prefix = prefix;\n    }\n\n\n    getTypeName(){\n        return 'prefixedIri';\n    }\n\n\n    toString(){\n        return this.getPrefix().getPrefixName()+':'+this.getValue();\n    }\n\n}\n\nexport default PrefixedIri;","class Prefix {\n\n    constructor(prefixName='',prefixValue='http://example.org/'){\n        this.prefixName = prefixName;\n        this.prefixValue = prefixValue;\n    }\n\n\n    getPrefixName(){\n        return this.prefixName;\n    }\n\n    getPrefixValue(){\n        return this.prefixValue;\n    }\n\n}\n\nexport default Prefix;","import PrefixedIri from'./concreteTypes/prefixedIri';\nimport IriRef from'./concreteTypes/iriRef';\nimport BNode from'./concreteTypes/bNode';\nimport Primitive from'./concreteTypes/primitive';\nimport ShapeReference from'./concreteTypes/shapeReference';\n\nimport Literal from'./concreteTypes/kinds/literal';\nimport NonLiteral from'./concreteTypes/kinds/nonLiteral';\nimport IriKind from'./concreteTypes/kinds/iriKind';\nimport BNodeKind from'./concreteTypes/kinds/bNodeKind';\n\nclass TypesFactory{\n\n    createType(type,context){\n\n        let retType;\n        if(type == 'iriRef'){\n            retType = new IriRef(context);\n        }\n        \n        if(type == 'prefixedIri'){\n            retType = new PrefixedIri(context);\n        }\n\n        if(type == 'bnodeType'){\n            retType = new BNode(context);\n        }\n\n        if(type == 'primitive'){\n            retType = new Primitive();\n        }\n\n        if(type == 'shape'){\n            retType = new ShapeReference('');\n        }\n\n        if(type == 'literal'){\n            retType = new Literal(context);\n        }\n\n        if(type == 'nonliteral'){\n            retType = new NonLiteral(context);\n        }\n\n        if(type == 'iri'){\n            retType = new IriKind(context);\n        }\n\n        if(type == 'bnode'){\n            retType = new BNodeKind(context);\n        }\n \n\n        return retType;\n\n    }\n\n\n}\n\nexport default TypesFactory;","import Type from '../type';\nimport Editor from'../../../editor';\n\nclass IriRef extends Type{\n\n    constructor(context,value=''){\n        super(value);\n        this.context = context;\n    }\n\n    getTypeName(){\n        return 'iriRef';\n    }\n\n\n    toString(){\n        return '<'+this.getValue()+'>';\n    }\n\n\n}\n\nexport default IriRef;","import Type from '../type';\n\nconst PRIMITIVES = ['String','Integer','Date','Boolean'];\n\nclass Primitive extends Type{\n\n     constructor(value='string'){\n        super(value);\n    }\n\n    getTypeName(){\n        return 'primitive';\n    }\n\n    toString(){\n        return 'xsd:'+this.getValue();\n    }\n\n\n\n}\n\nexport default Primitive;","import TypesFactory from './types/typesFactory';\n\nimport IrirRef from './types/concreteTypes/iriRef';\nimport PrefixedIri from './types/concreteTypes/prefixedIri';\nimport BlankKind from './types/concreteTypes/kinds/blankKind';\n\nclass Shape {\n\n  constructor(id,type=new IrirRef('shapeName'),triples = [],qualifier=new BlankKind()) {\n      this.id = id;\n      this.type = type;\n      this.triples = triples;\n      this.triplesCount = this.triples.length;\n      this.factory = new TypesFactory();\n      this.qualifier = qualifier;\n    }\n\n    addTriple(triple){\n        this.triples.push(triple);\n        this.triplesCount++;\n    }\n\n    removeTriple(tripleId){\n      this.triples = this.triples.filter(function( obj ) {\n        return obj.id != tripleId\n      });\n    }\n\n    getTriplesCount(){\n      return this.triplesCount;\n    }\n\n\n    getId(){\n      return this.id;\n    }\n\n    getType(){\n      return this.type; \n    }\n\n\n    getTriples() {\n        return this.triples;\n     }\n\n    setTriples(triples){\n      this.triples = triples;\n    }\n\n    getQualifier() {\n        return this.qualifier;\n     }\n\n    setQualifier(qualifier){\n      this.qualifier = this.factory.createType(qualifier,'shapeName');\n    }\n    \n\n    setType(type){\n        this.type = this.factory.createType(type,'shapeName');\n     }\n\n\n     toString(){\n    \n      let str = this.type+' '+this.qualifier+' {\\n'\n      this.triples.forEach(triple => {\n        str+=triple;\n      });\n\n      str+=\"}\\n\\n\"\n      return str\n\n     }\n\n\n  }\n\nexport default Shape;","import Type from '../type';\n\nclass BNode extends Type{\n\n    constructor(context,value='example'){\n        super(value);\n        this.context = context;\n    }\n\n\n    getTypeName(){\n        return 'bnodeType';\n    }\n\n\n    toString(){\n        return '_:'+this.getValue();\n    }\n\n}\n\n\n\nexport default BNode;","import Type from '../type';\n\nclass ShapeReference extends Type{\n\n    constructor(value=''){\n        super(value);\n    }\n\n    getTypeName(){\n        return 'shape';\n    }\n\n    setValue(value){\n        this.value=value;\n    }\n\n    toString(){\n        return this.value;\n    }\n\n\n}\n\n\nexport default ShapeReference;","import Type from '../../type';\n\nclass BlankKind extends Type{\n\n     constructor(value=''){\n        super(value);\n    }\n\n    getTypeName(){\n        return 'blank';\n    }\n\n    toString(){\n        return '';\n    }\n\n\n\n}\n\nexport default BlankKind;","import Type from '../../type';\n\nclass Literal extends Type{\n\n     constructor(value=''){\n        super(value);\n    }\n\n    getTypeName(){\n        return 'literal';\n    }\n\n    toString(){\n        return 'Literal';\n    }\n\n\n\n}\n\nexport default Literal;","import Type from '../../type';\n\nclass NonLiteral extends Type{\n\n     constructor(value=''){\n        super(value);\n    }\n\n    getTypeName(){\n        return 'nonliteralKind';\n    }\n\n    toString(){\n        return 'NONLITERAL';\n    }\n\n\n\n}\n\nexport default NonLiteral;","import Type from '../../type';\n\nclass IriKind extends Type{\n\n     constructor(value=''){\n        super(value);\n    }\n\n    getTypeName(){\n        return 'iri';\n    }\n\n    toString(){\n        return 'IRI';\n    }\n\n\n\n}\n\nexport default IriKind;","import Type from '../../type';\n\nclass BNodeKind extends Type{\n\n     constructor(value=''){\n        super(value);\n    }\n\n    getTypeName(){\n        return 'bnode';\n    }\n\n    toString(){\n        return 'BNODE';\n    }\n\n\n\n}\n\nexport default BNodeKind;","import Shape from'../shape';\n\nclass InlineShape{\n\n    constructor(shape=null){\n        this.shape = shape;\n    }\n\n\n    getShape(){\n        return this.shape;\n    }\n\n    setShape(shape){\n        this.shape = shape;\n    }\n\n\n    toString(){\n        if(this.shape){\n           let shapeRef = this.shape.getType().toString();\n            return '@'+shapeRef;\n        }\n\n        return '';\n    }\n\n\n}\n\nexport default InlineShape;","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","class Type{\n\n    constructor(value){\n        this.value = value;\n    }\n\n    getValue(){\n        return this.value;\n    }\n\n    setValue(value){\n        this.value = value;\n    }\n\n\n}\n\nexport default Type;","import Codemirror from 'codemirror';\nimport Editor from '../entities/editor';\nimport Shape from '../entities/shexEntities/shape';\n\nlet shapesCount = 0;\n\nfunction addShape (shapes){\n\n    const id = shapes.length + shapesCount++;\n    const newShape = new Shape(id);\n    \n    let newShapes = [];\n    newShapes = Object.assign(newShapes, shapes);\n    newShapes.push(newShape)\n    emit(newShapes);\n    return newShape;\n}\n\nfunction deleteShape(shapes,shapeId) {\n    var response = window.confirm('Are you sure?');\n    if (response == true) {\n        const newShapes = shapes.filter(shape => shape.id != shapeId);\n        emit(newShapes);\n        return newShapes;\n    }\n    return shapes;\n}\n\nfunction getShapeById(shapes,shapeId) {\n    return shapes.filter(function( obj ) {\n        return obj.id == shapeId\n    })[0];\n}\n\nfunction getShapeByName(shapes,name) {\n    for(let s in shapes){\n        if(shapes[s].getType().getValue() == name){\n            return shapes[s];\n        }\n    }\n}\n\n\nfunction getTripleById(shape,tripleId) {\n    return shape.getTriples().filter(function( obj ) {\n        return obj.id == tripleId\n    })[0];\n}\n\n\nfunction emit(newShapes) {\n    const yashe = Editor.getInstance().getYashe();\n    Codemirror.signal(yashe,'humanEvent',newShapes);\n}\n\n\nconst shexUtils = {\n    addShape:addShape,\n    deleteShape:deleteShape,\n    getShapeById:getShapeById,\n    getShapeByName:getShapeByName,\n    getTripleById:getTripleById,\n    emit:emit\n}\n\nexport default shexUtils;","import shexUtils from './shexUtils';\n\nimport Editor from '../entities/editor';\n\nimport  Shape from '../entities/shexEntities/shape';\nimport  Triple from '../entities/shexEntities/triple';\n\nimport TypesFactory from '../entities/shexEntities/types/typesFactory';\n\nimport PrefixedIri from '../entities/shexEntities/types/concreteTypes/prefixedIri';\nimport IriRef from '../entities/shexEntities/types/concreteTypes/iriRef';\nimport BNode from '../entities/shexEntities/types/concreteTypes/bNode';\nimport Primitive from '../entities/shexEntities/types/concreteTypes/primitive';\nimport ShapeReference from '../entities/shexEntities/types/concreteTypes/shapeReference';\n\nimport Literal from '../entities/shexEntities/types/concreteTypes/kinds/literal';\nimport NonLiteral from '../entities/shexEntities/types/concreteTypes/kinds/nonLiteral';\nimport IriKind from '../entities/shexEntities/types/concreteTypes/kinds/iriKind';\nimport BNodeKind from '../entities/shexEntities/types/concreteTypes/kinds/bNodeKind';\nimport BlankKind from '../entities/shexEntities/types/concreteTypes/kinds/blankKind';\n\n\n\nimport Prefix from '../entities/shexEntities/shexUtils/prefix';\n\nimport InlineShape from '../entities/shexEntities/shexUtils/inlineShape';\n\n\n//HAY QUE METER TODOS\nconst PRIMITIVES = ['string','integer','date','boolean'];\nconst CARDINALITY = ['*','?','+'];\n\n\nlet inlines;\n\nfunction getTokens(){\n    let yashe = Editor.getInstance().getYashe();\n    let tokens =[];\n    if(yashe!=undefined){\n        let numPrefixes = Object.keys(yashe.getDefinedPrefixes()).length;\n        for (var l = numPrefixes+1; l < yashe.lineCount(); ++l) {\n            let lineTokens = getNonWsTokens(yashe.getLineTokens(l));\n            lineTokens.forEach(token =>{\n                tokens.push(token);\n            })\n\n        }\n    }\n    return tokens;\n}\n\nfunction getDefinedShapes(tokens){\n    let brackets=0\n    let shape=[];\n    let defShapes = [];\n    //Separate shapes in arrays\n    tokens.forEach(element =>{\n        shape.push(element);\n        if(element.string == '{'){\n            brackets++;\n        }\n\n        if(element.string == '}'){\n            brackets--;\n            //Is the last } ?\n            if(brackets==0){\n                defShapes.push(shape);\n                shape = [];\n            }\n        }\n\n    })\n    return defShapes;\n}\n\n\nfunction getShapes(defShapes){\n    inlines = [];\n    let shapes = [];\n    let yashe = Editor.getInstance().getYashe();\n\n    defShapes.forEach(shape => {\n        let id = shapes.length;\n        let shapeDef = shape[0].string;\n        let shapeType = getType(shapeDef,'shapeName');\n        let qualifier = getQualifier(shape);\n        let triples = getTriples(id,shape);\n\n        shapes.push(new Shape(id,shapeType,triples,qualifier));\n    })\n    return shapes;\n\n}\n\nfunction getQualifier(shape) {\n    if(shape[1].type == 'keyword'){\n        let type = shape[1].string.toLowerCase();\n        return new TypesFactory().createType(type);\n    }\n    return new BlankKind();\n}\n\nfunction getTriples(shapeId,shape) {\n        let triples = [];\n        let singleTriple = [];\n        let yashe = Editor.getInstance().getYashe();\n        let start = getStart(shape);\n        for(let i=start;i<shape.length;i++){\n            singleTriple.push(shape[i])\n            if(shape[i].type == 'punc'){// finish of the triple ';'\n                if(singleTriple.length!=1){ //This line is neccesary when last triple of the shape ends with ';'\n           \n                    triples.push(getTriple(triples,singleTriple,shapeId));\n                    singleTriple = [];\n                }\n            }\n\n        }\n    return triples;\n}\n\nfunction getTriple(triples,singleTriple,shapeId) {\n    let id = triples.length;\n    let type;\n    let value;\n    let cardinality;\n    let inlineShape = new InlineShape();\n    let inlineName;\n    let index = 0;\n    for(let s in singleTriple){\n        let token = singleTriple[s];\n        \n        if(index == 0){\n            type = getType(token.string,'tripleName');\n            \n        }else{\n   \n            if(token.type == 'string-2' || token.type == 'keyword' || token.type == 'variable-3'){\n                value = getValue(token.string);\n            }\n    \n            if(token.type == 'at' ){\n                \n                inlineName = getInlineName(token.string);\n                inlines.push(\n                        {\n                            shapeId:shapeId,\n                            tripleId:id,\n                            inlineName:inlineName\n                        }\n                    );\n            }\n\n            if(token.type == 'card' ){\n                cardinality = token.string;\n            }\n\n        }\n        index++;\n    }\n\n\n    //ShapeRef\n    if(inlineName != undefined){\n        let ref;\n        if(value!= undefined){\n           ref = value.getTypeName();\n        }\n        value = new ShapeReference(ref); \n    }\n\n    return new Triple(id,type,value,inlineShape,cardinality);\n}\n\nfunction getStart(shape){\n    for(let i=0;i<shape.length;i++){\n        if(shape[i].string=='{'){\n            return i+1;\n        }\n    }\n}\n\n\n\nfunction getValue(def) {\n\n    let factory = new TypesFactory();\n    let type = factory.createType(def.toLowerCase());\n\n    if(type!=undefined){\n        return type;\n    }\n\n\n    if(def.startsWith('<')){\n        let value = def.split('<')[1].split('>')[0];\n        return new IriRef('valueName',value);\n    }\n\n    let token = def.split(':');\n    let yashe = Editor.getInstance().getYashe();\n\n    if(token.length==2){\n        //At this point it can be Prefixed,Primitive or ShapeRef\n        if(isPrimitive(token[1])){\n            return new Primitive(token[1]);\n        }else{\n            let prefixName = token[0];\n            let prefixValue = getPrefixValue(yashe.getDefinedPrefixes(),prefixName)\n            let prefix = new Prefix(prefixName,prefixValue);\n            return  new PrefixedIri('valueName',prefix,token[1]);\n        }\n\n    }\n \n}\n\nfunction getType(def,context) {\n    let value;\n    let yashe = Editor.getInstance().getYashe();\n    if(def.startsWith('<')){\n        value = def.split('<')[1].split('>')[0];\n        return new IriRef(context,value);\n    }else if(def.startsWith('_:')){\n        value = def.split(':')[1];\n        return new BNode(context,value);\n    }else{\n        value = def.split(':')[1];\n        let prefixName = def.split(':')[0];\n        let prefixValue = getPrefixValue(yashe.getDefinedPrefixes(),prefixName)\n        let prefix = new Prefix(prefixName,prefixValue);\n        return new PrefixedIri(context,prefix,value);\n    }\n}\n\n\nfunction updateInlines(shapes) {\n\n    for(let inShape in inlines){\n  \n        let shapeId = inlines[inShape].shapeId;\n        let tripleId = inlines[inShape].tripleId;\n        let name = inlines[inShape].inlineName;\n\n        let shape = shexUtils.getShapeById(shapes,shapeId);\n        let triple = shexUtils.getTripleById(shape,tripleId);\n\n        let shapeRef = shexUtils.getShapeByName(shapes,name);\n        triple.getInlineShape().setShape(shapeRef);\n\n    }\n}\n\n\n\nfunction getPrefixValue(defPrefixes,prefixName){\n    let prefixValue;\n    for(let pre in defPrefixes){\n        if(pre==prefixName){\n            prefixValue = defPrefixes[pre]\n        }\n    }\n    return prefixValue;\n}\n\n\nfunction isPrimitive(value) {\n    for(let prim in PRIMITIVES){\n        if(PRIMITIVES[prim] == value){\n            return true;\n        }\n    }\n    return false;\n}\n\n\nfunction getInlineName(token) {\n    if(token.startsWith('@<')){\n        return token.split('<')[1].split('>')[0];\n    }\n    return token.split(':')[1];\n}\n\n\nfunction getNonWsTokens(tokens){\n    return tokens.filter(function(obj){\n        return obj.type != 'ws';\n    })\n}\n\nconst tokenUtils = {\n    getTokens:getTokens,\n    getDefinedShapes:getDefinedShapes,\n    getShapes:getShapes,\n    updateInlines:updateInlines\n}\n\nexport default tokenUtils;","import TypesFactory from './types/typesFactory';\n\nimport PrefixedIri from './types/concreteTypes/prefixedIri';\nimport Primitive from './types/concreteTypes/primitive';\n\nlet InlineShape = require('./shexUtils/inlineShape.js');\n\nclass Triple {\n\n\n    constructor(id,type=new PrefixedIri('tripleName'),value=new Primitive(),inlineShape=new InlineShape(),cardinality='') {\n        this.id = id;\n        this.type = type;\n        this.value = value;\n        this.cardinality = cardinality;\n        this.inlineShape = inlineShape;\n        this.factory = new TypesFactory();\n      }\n      \n    addValue(value){\n        this.values.push(value);\n        this.valuesCount++;\n    }\n\n    getId(){\n        return this.id;\n    }\n\n    getType(){\n      return this.type; \n    }\n\n    setType(type){\n       this.type = this.factory.createType(type,'tripleName');\n     }\n\n    setValue(value){\n        this.value = this.factory.createType(value,'valueName');;\n    }\n\n    setCardinality(cardinality){\n        this.cardinality = cardinality;\n    }\n\n    getInlineShape(){\n        return this.inlineShape;\n    }\n\n    setInlineShape(inlineShape){\n        this.inlineShape = inlineShape;\n    }\n\n\n    getValue(){\n       return this.value;\n    }\n\n\n    getCardinality(){\n        return this.cardinality;\n    }\n\n\n\n    toString(){\n        return '  '+this.getType().toString()+'          '+\n        this.getValue().toString() +' '+\n        this.getInlineShape().toString()+\n        this.getCardinality()+'  ;\\n';\n\n    }\n\n\n}\n\nexport default Triple;","import Editor from '../entities/editor';\nimport tokenUtils from './tokenUtils';\n\n\nconst DEFAULT_SHAPE = 'PREFIX :       <http://example.org/>\\n'+\n'PREFIX schema: <http://schema.org/>\\n'+\n'PREFIX xsd:    <http://www.w3.org/2001/XMLSchema#>\\n\\n'+\n\n':User IRI {\\n'+ \n'  schema:name          xsd:string  ;\\n'+\n'  schema:birthDate     xsd:date?  ;\\n'+\n'  schema:birthPlace    xsd:string+  ;\\n'+\n'  schema:knows          @:User*  \\n'+\n'}';\n  \n  \n  function replaceShapes(){\n    let tokens = tokenUtils.getTokens();\n    let defShapes = tokenUtils.getDefinedShapes(tokens);\n    let newShapes = tokenUtils.getShapes(defShapes);\n    \n    tokenUtils.updateInlines(newShapes);\n\n    return newShapes;\n  }\n\n  function updatePrefixes(){\n    let newPrefixes = [];\n    let prefix = {};\n    let yashe = Editor.getInstance().getYashe();\n    if(yashe!=undefined){\n      let keys = Object.keys(yashe.getDefinedPrefixes());\n      let values = Object.values(yashe.getDefinedPrefixes());\n\n      for(let i=0;i<keys.length;i++){\n          prefix = {};\n          prefix.key=keys[i];\n          prefix.val=values[i];\n          newPrefixes.push(prefix);\n      }\n    }\n    return newPrefixes;\n  }\n\n const yasheUtils = {\n      DEFAULT_SHAPE:DEFAULT_SHAPE,\n      replaceShapes:replaceShapes,\n      updatePrefixes:updatePrefixes\n\n  }\n\n  export default yasheUtils;\n","import React, {useState,useContext,useEffect,useRef} from 'react';\nimport 'yashe/dist/yashe.min.css';\nimport {ShapesContext} from '../App';\n\nimport YASHE from 'yashe';\nimport Editor from '../entities/editor';\n\nimport yasheUtils from '../utils/yasheUtils';\n\nfunction EditorComp() {\n\n  const [yashe,setYashe] = useState(null);\n  const textAreaRef = useRef(null);\n  const context = useContext(ShapesContext);\n\n  useEffect(() => {\n    \n        if (!yashe) {\n            const options = {\n                persistent:false,\n                lineNumbers: true,\n                viewportMargin: Infinity\n            }\n            \n            const y = YASHE.fromTextArea(\n                textAreaRef.current, \n                options)\n\n             y.on('blur', function() {\n                if(!y.hasErrors(y)){\n                    replaceShapes();\n                    updatePrefixes();\n                }\n            });\n\n\n             \n            y.on('humanEvent', function(shapes) {\n                Editor.getInstance().draw(shapes);\n            });\n\n\n            y.on('prefixUpdate', function() {\n                updatePrefixes();\n            });\n\n            y.on('themeChange', function() {\n                changeThemeStyle();\n            });\n\n            y.on('delete', function() {\n                replaceShapes();\n                updatePrefixes();\n\n            });\n\n            y.on('upload', function() {\n                //TimeOut necesary\n                setTimeout(function(){\n                  replaceShapes();\n                  updatePrefixes();\n                }, 10);\n                \n            });\n\n            y.on('keydown', function() {\n                if(!y.hasErrors()){\n                    replaceShapes();\n                    updatePrefixes();\n                }\n            });\n\n            //Fired after a key is handled through a key map\n            //(for example \"Ctrl-Z\")\n            y.on('keyHandled', function() {\n                if(!y.hasErrors()){\n                    replaceShapes();\n                    updatePrefixes();\n                }\n            });\n\n            y.setValue(yasheUtils.DEFAULT_SHAPE)\n            y.refresh();\n            setYashe(y);\n            \n            Editor.getInstance().setYashe(y);\n\n            replaceShapes();\n            updatePrefixes();\n        }\n    }, [yashe]\n    );\n\n    const replaceShapes = ()=>{\n        context.replaceShapes(yasheUtils.replaceShapes());\n    }\n\n    const updatePrefixes = ()=>{\n        context.updatePrefixes(yasheUtils.updatePrefixes());\n    }\n\n     const changeThemeStyle = ()=>{\n         context.changeThemeStyle();\n    }\n\n\n\n    return  (<div className='col show'>\n                <textarea ref={textAreaRef}/>\n            </div>            \n    );\n\n}\n\n\n\nexport default EditorComp;\n\n","import React,{useState,useContext} from 'react';\nimport {ShapesContext} from '../../../../App';\n\nfunction IriComp (props) {\n\n    const context = useContext(ShapesContext);\n    const {shape,triple,type} = props;\n\n    let initialValue=shape.type.value;\n    if(type =='triple'){\n      initialValue = triple.type.value;\n    }else if(type =='value'){\n      initialValue = triple.value.value;\n    }\n\n    const [value,setValue] = useState(initialValue);\n\n     \n    const handleChange = (e) =>{\n      \n      const value = e.target.value;\n      if(type == 'shape'){\n        shape.type.setValue(value);\n      }else if(type == 'triple'){\n        triple.type.setValue(value);\n      }else{\n        triple.value.setValue(value);            \n      }\n      context.emit();\n      setValue(value);\n\n\n    \n    }\n    \n\n    return (<input className={shape.type.context+' form-control col-4'} \n                      context=\"text\" \n                      value={value}\n                      onChange={handleChange}/>);\n    \n                                   \n    \n\n}\n\nexport default IriComp;\n\n","import React,{useState,useContext,useEffect} from 'react';\nimport {ShapesContext} from '../../../../App';\nimport {getPrefix} from '../../../../utils/prefixUtils';\n\nfunction PrefixedComp (props) {\n\n    const context = useContext(ShapesContext);\n \n    const {shape,triple,type} = props;\n\n    let initialValue = shape.type.value;\n    //We can't initializae initialPrefix \n    //beacause if it is called by a triple \n    //we don't know its shape's type\n    let initialPrefix; \n    if(type=='shape'){\n      initialPrefix = shape.type.prefix.prefixValue;\n    }else if(type =='triple'){\n      initialValue = triple.type.value;\n      initialPrefix = triple.type.prefix.prefixValue;\n    }else{ \n      initialValue = triple.value.value;\n      initialPrefix = triple.value.prefix.prefixValue;\n    }\n\n    const [value,setValue] = useState(initialValue);\n    const [prefix,setPrefix] = useState(initialPrefix);\n\n\n  /**\n    Esto igual se puede quitar\n   */\n   const getPrefixContex = ()=>{\n        let prefix = 'prefixShape';\n        let context = shape.type.context;\n        if( context == 'tripleName'){\n            prefix = 'prefixTriple';\n        }\n        if( context == 'valueName'){\n            prefix = 'prefixValue';\n        }\n        return prefix;\n    }\n\n    const handleTypeChange = (e) =>{\n        const value = e.target.value;\n        if(type == 'shape'){\n          shape.type.setValue(value);\n        }else if(type == 'triple'){\n          triple.type.setValue(value);\n        }else{\n          triple.value.setValue(value);            \n        }\n        context.emit();\n        setValue(value);\n    }\n\n    const handlePrefixChange = (e) =>{\n      let prefix = getPrefix(e.target.value);\n\n      if(type == 'shape'){\n        shape.type.setPrefix(prefix);\n      }else if(type == 'triple'){\n        triple.type.setPrefix(prefix);  \n      }else{\n        triple.value.setPrefix(prefix);  \n      }\n\n      context.emit();\n      setPrefix(e.target.value);\n    }\n\n    return  (<div className='row col-6'>\n                <select className={getPrefixContex()+' col-5 form-control'}\n                        value={prefix}\n                        onChange={handlePrefixChange}>\n                 \n                  { \n                    context.prefixes.map((pre) =>{\n                      return <option key={pre.key} value={pre.val}>{pre.key}</option>\n                    })\n                  }\n                </select>\n                   \n                <input  className={shape.type.value+' form-control col'} \n                        context=\"text\" \n                        value={value}\n                        onChange={handleTypeChange} />\n               \n              </div>);\n              \n                               \n    \n\n}\n\n\n    \n\nexport default PrefixedComp;\n\n","import Editor from '../entities/editor';\nimport Prefix from '../entities/shexEntities/shexUtils/prefix.js';\n\nexport function getPrefix(prefix){\n      let defined = Editor.getInstance().getYashe().getDefinedPrefixes();\n      for(let def in defined){\n          if(defined[def] == prefix){\n            return new Prefix(def,defined[def]);\n          }\n      }\n      return new Prefix();\n}\n\n","import React,{useState,useContext} from 'react';\nimport {ShapesContext} from '../../../../App';\n\nfunction BNodeComp(props) {\n\n    const context = useContext(ShapesContext);\n    const {shape} = props;\n\n    let initialValue=shape.type.value;     \n    if(initialValue == ''){\n        initialValue = 'example';\n        shape.type.setValue(value);\n    }\n\n    const [value,setValue] = useState(initialValue);\n        \n\n    const change = (e) =>{\n          const value = e.target.value;\n          shape.type.setValue(value);\n          context.emit();\n          setValue(value)\n    }\n   \n\n    return (<input   className={shape.type.context+' form-control col-4'} \n                        context=\"text\" \n                        value={value}\n                        onChange={change}/>);\n\n                                      \n    \n\n}\n\nexport default BNodeComp;\n\n","import React,{useState,useContext} from 'react';\nimport {ShapesContext} from '../../../../App';\n\nconst primitives = ['String','Integer','Date','Boolean'];\n\nfunction PrimitiveComp (props) {\n\n    const context = useContext(ShapesContext);\n    const {shape,triple} = props;\n\n    const [value,setValue] = useState(triple.value.value);\n\n    const handleChange = (e) =>{\n          const value = e.target.value;\n          triple.value.setValue(value);\n          context.emit();\n          setValue(value);\n    }\n    \n\n    return (<select className=\"col-sm-4 form-control tripleValue\"\n                    value={value}\n                    onChange={handleChange}>\n            {\n                primitives.map(prim =>{\n                    return <option key={prim} value={prim.toLowerCase()}>{prim}</option>\n                })\n            }\n            </select>);\n    \n}\n\nexport default PrimitiveComp;\n\n","import React,{useState,useContext} from 'react';\nimport {ShapesContext} from '../../../App';\n\nimport shexUtils from '../../../utils/shexUtils';\n\n\nfunction Qualifier (props) {\n\n    const context = useContext(ShapesContext);\n    const {shape,triple,value,scope} = props;\n\n    let initialValue;\n    if(scope=='shape'){\n        initialValue = shape.qualifier.getTypeName();\n    }else{\n         initialValue = triple.value.value;\n    }\n\n\n    const [valueType,setValueType] = useState(initialValue)\n\n    const handleTypeChange = (e) =>{\n        let newType = e.target.value;\n        if(scope=='shape'){\n            shape.setQualifier(newType);\n        }else{\n            triple.value.value =newType;\n        }\n\n        context.emit();\n        setValueType(newType);\n    }\n\n\n    return (<select className=\"col form-control valueInlineShape\"\n                        value={valueType}\n                        onChange={handleTypeChange}>\n                    <option value='shape'></option>\n                    <option value='iri'>IRI</option>\n                    <option value=\"literal\">Literal</option>\n                    <option value=\"nonliteral\">NonLiteral</option>\n                    <option value=\"bnode\">BNODE</option>\n                </select>\n\n    );\n    \n}\n\nexport default Qualifier;\n\n","import React,{useState,useContext} from 'react';\nimport {ShapesContext} from '../../../../App';\nimport Qualifier from '../../qualifier/Qualifier';\n\nimport shexUtils from '../../../../utils/shexUtils';\n\nfunction ShapeRefComp (props) {\n\n    const context = useContext(ShapesContext);\n    const {shape,triple} = props;\n\n    let inlineValue = '';\n    if(triple.inlineShape.shape != null){\n        inlineValue = triple.inlineShape.shape.id;\n    }\n    \n    const [inlineShape,setInlineShape] = useState(inlineValue);\n    const [valueType,setValueType] = useState(triple.value.getTypeName())\n\n\n    const handleInlineChange = (e) =>{\n        const shapeId = e.target.value;\n        let inlineShape = null;\n        let inlineSelector = '';\n        if(shapeId!=''){\n            inlineShape = shexUtils.getShapeById(context.shapes,shapeId);\n            inlineSelector = inlineShape.id;\n        }\n        triple.getInlineShape().setShape(inlineShape);\n        context.emit();\n        setInlineShape(inlineSelector);\n    }\n\n    const handleTypeChange = (e) =>{\n        let newType = e.target.value;\n        triple.setValue(newType);\n        context.emit();\n        setValueType(newType);\n    }\n\n\n    return (<div className='row col'>\n                <select className=\"col form-control valueInlineShape\"\n                        value={inlineShape}\n                        onChange={handleInlineChange}>\n                    <option value=''></option>\n                    { \n                    context.shapes.map(shape =>{\n                      return <option key={shape.id} value={shape.id}>{'@'+shape.type}</option>\n                    })\n                  }\n                </select>\n\n                <Qualifier triple={triple} scope='triple'/>\n            </div>\n\n    \n    \n    \n    );\n    \n}\n\nexport default ShapeRefComp;\n\n","import React from 'react';\n\nimport IriComp from './concrete/IriComp';\nimport PrefixedComp from './concrete/PrefixedComp';\nimport BNodeComp from './concrete/BNodeComp';\nimport PrimitiveComp from './concrete/PrimitiveComp';\nimport ShapeRefComp from './concrete/ShapeRefComp';\n\nfunction FactoryTypeComp (props) {\n\n    const {shape,triple,type,instance} = props;\n\n    if(instance == 'iriRef'){\n        \n        return <IriComp shape={shape} triple={triple} type={type}/>\n\n    }\n    else if(instance == 'prefixedIri'){\n\n        return <PrefixedComp shape={shape} triple={triple} type={type}/>\n\n    }\n    else if(instance == 'bnodeType'){\n\n        return <BNodeComp shape={shape}/>\n\n    }\n    else if(instance == 'primitive'){\n        \n        return  <PrimitiveComp shape={shape} triple={triple}/>\n\n    }else if(instance == 'shape'){\n        \n        return  <ShapeRefComp shape={shape}triple={triple}/>\n\n    }else{\n        return null;\n    }\n                                   \n}\n\nexport default FactoryTypeComp;\n\n","import React,{useContext,useState} from 'react';\nimport FactoryTypeComp from './FactoryTypeComp';\n\nimport {ShapesContext} from '../../../App';\n\nfunction TripleTypeComp (props){\n\n        const context = useContext(ShapesContext);\n\n        const {shape,triple,deleteTriple,handeCollapse} = props;\n\n        const [type,setType] = useState(triple.type.getTypeName());\n        const [collapseBtn,setCollapseBtn] = useState('expand_more');\n\n        const handleChange = (e)=>{\n                const type = e.target.value;\n                triple.setType(type)\n                context.emit();\n                setType(type)\n        }\n\n        const handleCollapseBtn = (e)=>{\n                if(collapseBtn=='expand_more'){\n                    setCollapseBtn('expand_less');\n                }else{\n                    setCollapseBtn('expand_more');\n                }\n\n                handeCollapse();\n\n        }\n\n\n        return (<div className=\"row col triples-header\">\n                        <label className=\"col-xs-1 tripleLabel\">Triple</label>                        \n                        <select className=\"col-2 form-control tripleType\" \n                                value={type} \n                                onChange={handleChange}>\n\n                                <option value=\"iriRef\">IriRef</option>\n                                <option value=\"prefixedIri\">Prefixed</option>\n                                \n                        </select>\n\n                        <FactoryTypeComp shape={shape} \n                                        triple={triple}\n                                        type='triple'\n                                        instance={triple.type.getTypeName()}/>\n                          \n                        <button className=\"col-xs-1  colapseButton mdc-icon-button material-icons btn-primary\"\n                                onClick={handleCollapseBtn}>\n                                {collapseBtn}\n                        </button>\n\n                        <button className=\"col-xs-1 deletePropButton mdc-icon-button material-icons btn-danger\"\n                                onClick={() => deleteTriple(triple.id)}>\n                                delete\n                        </button>\n\n                       \n\n                         \n                </div>);\n\n}\n\nexport default TripleTypeComp;\n\n","import React,{useContext,useState} from 'react';\nimport FactoryTypeComp from './FactoryTypeComp';\n\nimport {ShapesContext} from '../../../App';\n\nfunction ValueTypeComp(props) {\n    \n    const {shape,triple} = props;\n\n    const context = useContext(ShapesContext);\n    const [valueType,setValueType] = useState(triple.value.getTypeName())\n    \n    const handleChange = (event) =>{\n        let newType = event.target.value;\n        if(newType!='shape'){\n            //This is necesary when we change from ShapeType to otherType\n            triple.inlineShape.shape = null;\n        }\n        triple.setValue(newType);\n        context.emit();\n        setValueType(newType);\n    }\n\n    return  (<div className=\"row col-10\">\n                    <select className=\"col-5 form-control valueType\"\n                                    value={valueType} \n                                    onChange={handleChange}>\n\n                                    <option value=\"primitive\">Primitive</option>\n                                    <option value=\"shape\">Shape</option>\n                                    <option value=\"iriRef\">IriRef</option>\n                                    <option value=\"prefixedIri\">Prefixed</option>\n                                    <option value=\"literal\">Literal</option>\n                                    <option value=\"nonliteral\">NonLiteral</option>\n                                    <option value=\"iri\">IRI</option>\n                                    <option value=\"bnode\">BNODE</option>\n                                </select>\n\n\n                                <FactoryTypeComp shape={shape} \n                                    triple={triple}\n                                    type='value'\n                                    instance={triple.value.getTypeName()}/>\n\n                    </div>);\n\n}\n\nexport default ValueTypeComp;\n\n","import React,{useState,useContext} from 'react';\nimport {ShapesContext} from '../../../App';\n\nfunction CardinalityComp (props) {\n\n    const {shape,triple} = props;\n    \n    const context = useContext(ShapesContext);\n    const [cardinality,setCardinality] = useState(triple.cardinality.toString());\n    \n\n    const handleChange = (event) => {\n   \n        let cardinality = event.target.value;\n        triple.setCardinality(cardinality);\n        context.emit();\n        setCardinality(cardinality)\n       \n    }\n\n\n    return(<div className='row col-4'>    \n                <select className=\"col  form-control tripleCardinality\"\n                    value={cardinality}\n                    onChange={handleChange}>\n\n                            <option value=\"\">Exactly one</option>\n                            <option value=\"*\">Zero or more</option>\n                            <option value=\"+\">One at least</option>\n                            <option value=\"?\">One or none</option>\n                </select>\n                \n            </div>);\n\n  \n\n}\n\nexport default CardinalityComp;\n\n","import React,{useContext} from 'react';\n\nimport {ShapesContext} from '../../App';\n\nimport ValueTypeComp from './types/ValueTypeComp';\nimport CardinalityComp from './cardinality/CardinalityComp';\n\nfunction ValueComponent (props) {\n\n    const context = useContext(ShapesContext);\n    const {shape,triple,colapse} = props;\n\n\n           \n    return (<div ref={colapse} className=\"col-12 valuesCol\"  >\n                    <div className=\"row values-container\">\n                        <div className=\"col-10 triplesVal \">\n                            <div className=\"row\">\n                                <label className=\"col-3 valueLabel\">Value</label>\n                                <ValueTypeComp shape={shape} triple={triple}/>\n                                \n                                <label className=\"col-3 cardiLabel\">Cardinality</label>\n                                <CardinalityComp shape={shape} triple={triple}/>\n                            </div>\n                       </div>\n                    </div>\n                </div>);\n                                   \n\n\n}\n\nexport default ValueComponent;\n\n","import React,{useContext} from 'react';\nimport SlideToggle from \"react-slide-toggle\";\n\nimport TripleTypeComp from './types/TripleTypeComp';\n\nimport ValueComponent from './ValueComponent';\n\nfunction TripleComponent (props) {\n\n    const {shape,triple,deleteTriple} = props;\n\n    return ( <SlideToggle duration={180}\n                          collapsed\n                          render={({ toggle, setCollapsibleElement, progress }) => (\n                <div className=\"row tripleRow\">\n\n                    <TripleTypeComp \n                        shape={shape} \n                        triple={triple} \n                        deleteTriple={deleteTriple}\n                        handeCollapse={toggle}/>\n\n                <ValueComponent  \n                        shape={shape} \n                        triple={triple} \n                        colapse={setCollapsibleElement}/>\n                       \n                </div>\n            )}/>);\n                                   \n}\n\nexport default TripleComponent;\n\n","import React,{useContext,useState} from 'react';\nimport FactoryTypeComp from './FactoryTypeComp';\n\nimport {ShapesContext} from '../../../App';\n\nfunction ShapeTypeComp (props) {\n\n        const context = useContext(ShapesContext);\n        const {shape,colapse} = props;\n\n        const [type,setType] = useState(shape.type.getTypeName());\n        const [colapseBtn,setColapseBtn] = useState('expand_more');\n   \n        const handleChange = (e)=>{\n                const type = e.target.value;\n                shape.setType(type)\n                context.emit();\n                setType(type)\n        }\n\n        const handleColapse = (e)=>{\n                if(colapseBtn=='expand_more'){\n                    setColapseBtn('expand_less');\n                }else{\n                    setColapseBtn('expand_more');\n                }\n                colapse();\n        }\n\n\n        return (<div className=\"row col-8\">\n                        <select className=\"col-3 form-control shapeType\" \n                            value={type} \n                            onChange={handleChange}>\n\n                            <option value=\"iriRef\">IriRef</option>\n                            <option value=\"prefixedIri\">Prefixed</option>\n                            <option value=\"bnodeType\">BNode</option>\n                        </select>\n\n                        <FactoryTypeComp shape={shape} \n                                    triple={null}\n                                    type='shape'\n                                    instance={shape.type.getTypeName()}/>\n\n                        <button className=\"col-xs-1  colapseButton mdc-icon-button material-icons btn-primary\"\n                                onClick={handleColapse}>\n                                {colapseBtn}\n                        </button>\n\n\n                        <button className=\"col-xs-1 deleteShapeButton mdc-icon-button material-icons btn-danger\" \n                            onClick={()=>context.deleteShape(shape.id)}>\n                            delete\n                        </button>\n                \n                </div>);\n\n                                   \n\n}\n\nexport default ShapeTypeComp;\n\n","import React,{useContext,useState} from 'react';\nimport SlideToggle from \"react-slide-toggle\";\n\nimport {ShapesContext} from '../../App';\n\nimport TripleComponent from './TripleComponent';\nimport ShapeTypeComp from './types/ShapeTypeComp';\nimport Qualifier from './qualifier/Qualifier';\n\nimport Triple from '../../entities/shexEntities/triple';\n\nfunction ShapeComponent (props) {\n\n    const context = useContext(ShapesContext);\n    const {shape} = props;\n\n    const [triples,setTriples] = useState(shape.triples);\n     const [colapseBtn,setColapseBtn] = useState('expand_less');\n\n    const handleChange = ()=>{\n        const id = shape.getTriplesCount();\n        const triple = new Triple(id);\n        \n        setTriples([...triples,triple]);\n\n        shape.addTriple(triple);\n        context.emit();\n        \n    }\n\n    const handleColapse = (toggle)=>{\n            if(colapseBtn=='expand_more'){\n                setColapseBtn('expand_less');\n            }else{\n                setColapseBtn('expand_more');\n            }\n            toggle();\n    }\n\n    const deleteTriple = (tripleId)=>{\n        const newTriples = shape.triples.filter( triple => triple.id != tripleId);\n        setTriples(newTriples);\n        shape.setTriples(newTriples);\n        context.emit();\n    }\n\n\n    return (\n        <div className=\"shapes-container\" style={context.currentStyle}>\n            <SlideToggle duration={180}\n                         collapsed\n                         render={({ toggle, setCollapsibleElement, progress }) => (\n                <div>              \n                    <div className=\"row shapes-header\" style={context.currentStyle}>\n                        <label className=\"col-sm-2\">Shape </label>\n                        <ShapeTypeComp shape={shape} colapse={toggle}/>\n                    \n                    </div>\n            \n                    <div className=\"row qualifier\" ref={setCollapsibleElement} style={context.currentStyle}>\n                       \n                            <label className=\"col-2 qualiLabel\">Qualifier </label>\n                            <div className=\"col-2\">\n                                <Qualifier shape={shape} scope='shape'/>\n                            </div>\n\n                    </div>\n\n                </div>\n\n            )}/>\n\n            <SlideToggle duration={180}                         \n                         render={({ toggle, setCollapsibleElement, progress }) => (\n                <div>              \n                     <button className=\"col-xs-1  colapseTriplesBtn mdc-icon-button material-icons btn-primary\"\n                                onClick={()=>handleColapse(toggle)}>\n                                {colapseBtn}\n                        </button>\n                    <div ref={setCollapsibleElement}>\n                        <div className=\"triples-container col-xs \"style={context.currentStyle}>\n                            {triples.map(triple =>\n\n                                <TripleComponent key={triple.id}\n                                                shape={shape} \n                                                triple={triple}\n                                                deleteTriple={deleteTriple}\n                                /> \n                                    \n                            )}\n                        </div>\n\n                        <button className=\"btn-primary addPropButton col-xs-3\"\n                        onClick={handleChange}>\n                        + Triple</button>\n                    </div>\n                </div>\n\n            )}/>\n\n           \n         </div>   \n        \n        \n    );\n                                   \n    \n}\n\nexport default ShapeComponent;\n\n","import React,{useContext} from 'react';\nimport '../App.css';\nimport ShapeComponent from './shexComponents/ShapeComponent';\nimport {ShapesContext} from '../App';\n\nfunction AssistantComp (props) {\n\n    const context = useContext(ShapesContext);\n    const {colapse} = props;\n\n    return (<div ref={colapse} id='assistant-container' className=\"assistant col-lg-6\" style={context.currentStyle}> \n                    {context.shapes.map(shape =>{\n                                \n                            return <ShapeComponent key={shape.id} shape={shape}/>\n                    })\n                    }\n\n                    <button id='addShapeButton' \n                            className=\"btn-primary addShapeButton\"\n                            onClick={context.addShape}>\n                            + Shape\n                    </button>\n                </div>);\n\n    \n}\n\nexport default AssistantComp;","import React from 'react';\nimport Codemirror from 'codemirror';\nimport Editor from '../../entities/editor';\n\nfunction PrefixSelector (props){\n\n    const {namespaces} = props;\n\n\n    const handleChange = (e) =>{\n        let yashe = Editor.getInstance().getYashe();\n        let current = yashe.getValue();\n        let defined = yashe.getDefinedPrefixes();\n        let prefix= e.target.value;\n        let uri = 'http://example.org/';\n        //getUri\n        for(let def in namespaces){\n          for(let p in namespaces[def]){\n            if(p==prefix)\n              uri = namespaces[def][p];\n          }\n        }\n        yashe.setValue( 'PREFIX ' + prefix + ': <' + uri + '>\\n' + current );\n        Codemirror.signal(yashe,'prefixUpdate');\n    }\n\n    return (<div>\n             \n                <button className='form-control'\n                        onClick={handleChange}>\n                        Example Prefix\n                </button>\n\n                {\n                    \n                    Object.keys(namespaces).map( (key) =>{\n                            return <div key={key}>\n                                        <select  className='form-control'\n                                                 onChange={handleChange}>\n                                            <option>{key}</option>\n                                            { \n                                                Object.keys(namespaces[key]).map( (prefix) =>{\n                                                    return <option key={prefix} value={prefix}>{prefix}</option>\n                                                })  \n                                            }\n                                        </select>\n                                    </div>\n                                    \n                    }) \n                }\n            </div>);\n                     \n}\n\n\nexport default PrefixSelector;\n","export const ALL_PREFIXES = {\n    Wikidata: {\n        wikibase: 'http://wikiba.se/ontology#',\n        wd: 'http://www.wikidata.org/entity/',\n        wdt: 'http://www.wikidata.org/prop/direct/',\n        wdtn: 'http://www.wikidata.org/prop/direct-normalized/',\n        wds: 'http://www.wikidata.org/entity/statement/',\n        p: 'http://www.wikidata.org/prop/',\n        wdref: 'http://www.wikidata.org/reference/',\n        wdv: 'http://www.wikidata.org/value/',\n        ps: 'http://www.wikidata.org/prop/statement/',\n        psv: 'http://www.wikidata.org/prop/statement/value/',\n        psn: 'http://www.wikidata.org/prop/statement/value-normalized/',\n        pq: 'http://www.wikidata.org/prop/qualifier/',\n        pqv: 'http://www.wikidata.org/prop/qualifier/value/',\n        pqn: 'http://www.wikidata.org/prop/qualifier/value-normalized/',\n        pr: 'http://www.wikidata.org/prop/reference/',\n        prv: 'http://www.wikidata.org/prop/reference/value/',\n        prn: 'http://www.wikidata.org/prop/reference/value-normalized/',\n        wdno: 'http://www.wikidata.org/prop/novalue/',\n        wdata: 'http://www.wikidata.org/wiki/Special:EntityData/'\n    },\n    W3C: {\n        rdfs: 'http://www.w3.org/2000/01/rdf-schema#',\n        rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n        owl: 'http://www.w3.org/2002/07/owl#',\n        skos: 'http://www.w3.org/2004/02/skos/core#',\n        xsd: 'http://www.w3.org/2001/XMLSchema#',\n        prov: 'http://www.w3.org/ns/prov#'\n    },\n    'Social/Other': {\n        schema: 'http://schema.org/',\n        geo: 'http://www.opengis.net/ont/geosparql#',\n        geof: 'http://www.opengis.net/def/geosparql/function/'\n    },\n    Blazegraph: {\n        bd: 'http://www.bigdata.com/rdf#',\n        bds: 'http://www.bigdata.com/rdf/search#',\n        gas: 'http://www.bigdata.com/rdf/gas#',\n        hint: 'http://www.bigdata.com/queryHints#'\n    }\n};\n\n\n","import React from 'react';\nimport PrefixSelector from './PrefixSelector';\nimport {ALL_PREFIXES} from '../../utils/rdfUtils';\n\n\nfunction Nav (props) {\n\n    const {toggle} = props;\n\n    return (<div className=\"row editor-nav\">\n                <button className=\"btn btn-default assistantBtn \" \n                        type=\"button\"\n                        onClick={toggle}>\n                        Assistant\n                </button>\n\n                <div className=\"dropdown\">\n                    <button className=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">Prefixes\n                    <span className=\"caret\"></span></button>\n                    <ul className='dropdown-menu'>\n                        <li>\n                            <div id='prefixesDropdown' className='prefixes'>  \n\n                                <PrefixSelector namespaces={ALL_PREFIXES}/>\n                                  \n                            </div>\n                        </li>\n                    </ul>\n                </div>\n            </div>);\n    \n    \n}\n\n\nexport default Nav;\n","import React, {useState} from 'react';\nimport SlideToggle from \"react-slide-toggle\";\nimport logo from './logo.svg';\nimport './App.css';\n\nimport EditorComp from './components/EditorComp';\nimport AssistantComp from './components/AssistantComp';\nimport Nav from './components/navComponents/Nav';\n\nimport shexUtils from './utils/shexUtils';\n\n\nexport const ShapesContext = React.createContext();\n\nfunction App() {\n\n    const [shapes,setShapes] = useState([]);\n    const [prefixes,setPrefixes] = useState([{key:'',val:'http://example.org/'}]);\n\n     const darkStyle = {\n        background: '#2B2B2B',\n        color:'white'\n    }\n\n    const lightStyle = {\n        background: '#eaf3ff',\n        color:'black'\n    }\n\n    const [style,setStyle] = useState(lightStyle);\n    let theme = 'light';\n\n    const addShape = () =>{\n      setShapes([...shapes,shexUtils.addShape(shapes)]);\n    }\n\n    const deleteShape = (shapeId) =>{\n      setShapes(shexUtils.deleteShape(shapes,shapeId));\n    }\n\n    const emit = ()=>{\n      shexUtils.emit(shapes);\n    }\n\n    const replaceShapes = (newShapes) =>{\n      //This allows to render all the shapes when a property is updated.\n      //Best Glitch Ever\n      setShapes([]); \n      setShapes(newShapes);\n    }\n\n    const updatePrefixes = (newPrefixes)=>{\n      setPrefixes(newPrefixes);\n    }\n    \n    const changeThemeStyle = () =>{\n      if(theme=='light'){//I don't know why this doesn't work with style state\n        setStyle(darkStyle);\n        theme='dark';\n      }else{\n        theme='light';\n        setStyle(lightStyle);\n      }\n    }\n\n  \n    return (\n            \n            <ShapesContext.Provider value={\n                                    {\n                                      shapes,shapes,\n                                      addShape:addShape,\n                                      deleteShape:deleteShape,\n                                      replaceShapes:replaceShapes,\n                                      prefixes:prefixes,\n                                      updatePrefixes:updatePrefixes,\n                                      emit:emit,\n                                      currentStyle:style,\n                                      changeThemeStyle:changeThemeStyle\n                                    }\n                                  }>\n                \n                <SlideToggle duration={500}\n                             collapsed\n                             render={({ toggle, setCollapsibleElement, progress }) => (\n                              <div> \n                                  <Nav toggle={toggle}/>\n                                  <div className=\"row separator\" style={style}> \n                                      <AssistantComp colapse={setCollapsibleElement} initialShapes={shapes} />\n                                      <EditorComp />\n                                      \n                                  </div>\n                              </div>                              \n                  )}/>\n\n\n            </ShapesContext.Provider>\n          );\n                       \n           \n  \n    \n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","import YASHE from 'yashe';\n\n//Singleton Pattern\nconst Editor = (()=> {\n\n    function EditorClass(){\n\n    \n        this.getYashe = function () {\n            return this.yashe;\n        }\n\n        this.setYashe =  function (yashe) {\n            this.yashe = yashe;\n        }\n\n\n         this.getPrefixes = function () {\n                let yashe = Editor.getInstance().getYashe();\n                let definedPrefixes = yashe.getDefinedPrefixes();\n                let prefixes='';\n                for(let pre in definedPrefixes){\n                    prefixes+='PREFIX '+pre+':    <'+definedPrefixes[pre]+'>\\n';\n                }\n                prefixes+='\\n';\n                return prefixes;\n        }\n\n        this.draw = function(shapes){\n            let newContent = this.getPrefixes();\n            shapes.forEach(element =>{\n                newContent += element.toString()\n            });\n            this.getYashe().setValue(newContent);\n        }\n\n    }\n\n   \n\n    let instance;\n\n    return{\n        getInstance: ()=>{\n            if(!instance){\n                instance = new EditorClass();\n            }\n            return instance;\n        }\n\n    }\n\n})();\n\n\nexport default Editor;"],"sourceRoot":""}